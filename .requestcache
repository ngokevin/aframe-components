{"https://unpkg.com/aframe-alongpath-component@^0.2.1/package.json":{"name":"aframe-alongpath-component","version":"0.2.2","description":"A-Frame Component that allows entities to follow predefined paths","main":"index.js","directories":{"example":"examples"},"scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-alongpath-component.js && webpack -p index.js dist/aframe-alongpath-component.min.js","lint":"semistandard -v | snazzy","postpublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","start":"npm run dev"},"repository":{"type":"git","url":"git+https://github.com/protyze/aframe-alongpath-component.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"protyze <jan.azzati@gmail.com>","license":"GPL-3.0","bugs":{"url":"https://github.com/protyze/aframe-alongpath-component/issues"},"homepage":"https://github.com/protyze/aframe-alongpath-component#readme","dependencies":{"aframe":"^0.3.1"},"devDependencies":{"browserify":"^12.0.1","browserify-css":"^0.8.3","budo":"^7.1.0","webpack":"^1.12.9","ghpages":"0.0.3","shx":"^0.1.1","snazzy":"^4.0.0","semistandard":"^8.0.0","shelljs":"^0.7.0","inquirer":"^1.0.2"},"semistandard":{"ignore":["examples/build.js","dist/**"]}},"https://unpkg.com/aframe-bmfont-text-component@0.1.x/package.json":{"name":"aframe-bmfont-text-component","version":"0.1.4","description":"BMFont Text component for A-Frame.","main":"index.js","scripts":{"build":"browserify docs/main.js -o docs/build.js","dev":"budo docs/main.js:build.js --dir docs --port 8000 --live --open","dist":"webpack index.js dist/aframe-bmfont-text-component.js && webpack -p index.js dist/aframe-bmfont-text-component.min.js","postpublish":"npm run dist","start":"npm run dev"},"repository":{"type":"git","url":"git+https://github.com/bryik/aframe-bmfont-text-component.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Ben Pyrik <ben@wsundine.com>","license":"MIT","bugs":{"url":"https://github.com/bryik/aframe-bmfont-text-component/issues"},"homepage":"https://github.com/bryik/aframe-bmfont-text-component#readme","devDependencies":{"aframe":"^0.3.1","browserify":"^13.1.0","browserify-css":"^0.9.1","budo":"^9.0.0","eslint":"^3.3.1","eslint-config-semistandard":"^6.0.2","eslint-config-standard":"^5.3.1","eslint-plugin-promise":"^1.3.2","eslint-plugin-react":"^5.2.2","eslint-plugin-standard":"^1.3.2","inquirer":"^1.1.2","shelljs":"^0.7.3","webpack":"^1.13.2"},"dependencies":{"load-bmfont":"^1.2.3","object-assign":"^4.1.0","three-bmfont-text":"^2.1.0"}},"https://unpkg.com/aframe-particle-system-component@^1.0.4/package.json":{"name":"aframe-particle-system-component","version":"1.0.5","description":"Particle systems for A-Frame.","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-example-component.js && webpack -p index.js dist/aframe-example-component.min.js","lint":"semistandard -v | snazzy","prepublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","start":"npm run dev","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"git+https://github.com/IdeaSpaceVR/aframe-particle-system-component.git"},"keywords":["ideaspace","ideaspacevr","webvr","aframe-vr","aframe-component","aframe","mozvr","vr"],"author":"IdeaSpace <info@ideaspacevr.org> (https://www.ideaspacevr.org)","license":"MIT","bugs":{"url":"https://github.com/IdeaSpaceVR/aframe-particle-system-component/issues"},"homepage":"https://github.com/IdeaSpaceVR/aframe-particle-system-component#readme","devDependencies":{"aframe":"^0.3.2","browserify":"^13.0.0","browserify-css":"^0.9.1","budo":"^8.2.2","randomcolor":"^0.4.4","semistandard":"^8.0.0","shelljs":"^0.7.0","shx":"^0.1.1","snazzy":"^4.0.0","webpack":"^1.13.0"}},"https://unpkg.com/aframe-sun-sky@^3.0.1/package.json":{"name":"aframe-sun-sky","version":"3.0.1","description":"Gradient sky with adjustable sun in A-Frame","main":"index.js","scripts":{"dist":"webpack --module-bind 'glsl=shader' index.js dist/aframe-sun-sky.js && webpack --module-bind 'glsl=shader' -p index.js dist/aframe-sun-sky.min.js","postpublish":"npm run dist"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/kframe.git"},"keywords":["aframe","aframe-component","aframe-shader","aframe-vr","vr","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/kframe/issues"},"homepage":"https://github.com/ngokevin/kframe/tree/components/sun-sky#readme","devDependencies":{"aframe":"^0.3.0"}},"https://unpkg.com/aframe-animation-component@^3.0.2/package.json":{"name":"aframe-animation-component","version":"3.0.4","description":"Animations in A-Frame using anime.js","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-animation-component.js && webpack -p index.js dist/aframe-animation-component.min.js","lint":"semistandard -v | snazzy","prepublish":"npm run dist"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/kframe.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/kframe/issues"},"homepage":"https://github.com/ngokevin/kframe/tree/components/animation#readme","devDependencies":{"aframe":"^0.3.0","aframe-bmfont-text-component":"^0.1.4","aframe-layout-component":"^1.2.0","aframe-template-component":"^3.1.1","browserify":"^13.0.0","budo":"^8.2.2","randomcolor":"^0.4.4","semistandard":"^8.0.0","shelljs":"^0.7.0","shx":"^0.1.1","snazzy":"^4.0.0","webpack":"^1.13.0"},"semistandard":{"ignore":["examples/build.js","dist/**"]},"dependencies":{"animejs":"^1.1.0"}},"https://unpkg.com/aframe-extras.object-model@^3.0.x/package.json":{"name":"aframe-extras.object-model","version":"3.1.0","description":"Loader for THREE.ObjectLoader-compatible models.","author":"Don McCurdy <dm@donmccurdy.com>","license":"MIT","main":"index.js","repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-extras.git"},"peerDependencies":{"aframe":"^0.3.1"},"keywords":["aframe","a-frame","vr","webgl","webvr"]},"https://unpkg.com/aframe-text-component@0.3.x/package.json":{"name":"aframe-text-component","version":"0.3.0","description":"Text component for A-Frame VR.","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8008 --live --open","dist":"webpack index.js dist/aframe-text-component.js && webpack -p index.js dist/aframe-text-component.min.js","postpublish":"npm run dist","preghpages":"npm run build && rm -rf gh-pages && cp -r examples gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","test":"karma start ./tests/karma.conf.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/aframe-text-component.git"},"keywords":["aframe","aframe-component","layout","aframe-vr","vr","aframe-layout","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/aframe-text-component/issues"},"homepage":"https://github.com/ngokevin/aframe-text-component#readme","devDependencies":{"aframe":"^0.2.0","browserify":"^12.0.1","browserify-css":"^0.8.3","budo":"^8.1.0","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","ghpages":"0.0.3","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4","watchify":"^3.6.1","webpack":"^1.12.9"}},"https://unpkg.com/aframe-crawling-cursor@^1.0.2/package.json":{"name":"aframe-crawling-cursor","version":"1.0.4","description":"A A-Frame component to move cursor along objects' surface.","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-crawling-cursor.js && webpack -p index.js dist/aframe-crawling-cursor.min.js","lint":"semistandard -v | snazzy","prepublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","start":"npm run dev","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"git+https://github.com/jujunjun110/crawling-cursor.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Jun Ito ( https://twitter.com/jujunjun110 )","license":"MIT","bugs":{"url":"https://github.com/jujunjun110/aframe-crawling-cursor/issues"},"homepage":"https://github.com/jujunjun110/aframe-crawling-cursor#readme","devDependencies":{"aframe":"^0.3.0","browserify":"^13.0.0","browserify-css":"^0.9.1","budo":"^8.2.2","ghpages":"^0.0.8","inquirer":"^1.0.2","randomcolor":"^0.4.4","semistandard":"^8.0.0","shelljs":"^0.7.0","shx":"^0.1.1","snazzy":"^4.0.0","webpack":"^1.13.0"},"semistandard":{"ignore":["examples/build.js","dist/**"]},"directories":{"example":"examples"}},"https://unpkg.com/aframe-firebase-component@^3.0.0/package.json":{"name":"aframe-firebase-component","version":"3.0.0","description":"Firebase component for multiuser A-Frame.","main":"index.js","browser":"dist/aframe-firebase-component.min.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-firebase-component.js && webpack -p index.js dist/aframe-firebase-component.min.js","postpublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","test":"karma start ./tests/karma.conf.js","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/aframe-firebase-component.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/aframe-firebase-component/issues"},"homepage":"https://github.com/ngokevin/aframe-firebase-component#readme","devDependencies":{"aframe":"aframevr/aframe#master","aframe-template-component":"^1.5.0","browserify":"^13.0.0","browserify-css":"^0.9.1","budo":"^8.2.2","chai":"^3.5.0","chai-shallow-deep-equal":"^1.3.0","ghpages":"^0.0.8","inquirer":"^1.0.2","karma":"^0.13.15","karma-browserify":"^4.4.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^0.2.3","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^0.1.6","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.1.0","karma-sinon-chai":"^1.1.0","mocha":"^2.3.3","randomcolor":"^0.4.4","shelljs":"^0.7.0","shx":"^0.1.1","sinon":"^1.17.3","sinon-chai":"^2.8.0","webpack":"^1.13.0"},"dependencies":{"firebase":"^3.0.0","url-parse":"^1.1.1"}},"https://unpkg.com/aframe-layout-component@3.x.x/package.json":{"name":"aframe-layout-component","version":"3.0.1","description":"Layout component for A-Frame.","main":"index.js","browser":"dist/aframe-layout-component.min.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8005 --live --open","dist":"webpack index.js dist/aframe-layout-component.js && webpack -p index.js dist/aframe-layout-component.min.js","postpublish":"npm run dist","preghpages":"npm run build && rm -rf gh-pages && cp -r examples gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","test":"karma start ./tests/karma.conf.js","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/aframe-layout-component.git"},"keywords":["aframe","aframe-component","layout","aframe-vr","vr","aframe-layout","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/aframe-layout-component/issues"},"homepage":"https://github.com/ngokevin/aframe-layout-component#readme","devDependencies":{"aframe":"^0.2.0","browserify":"^12.0.1","browserify-css":"^0.8.3","budo":"^7.1.0","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","ghpages":"0.0.3","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4","webpack":"^1.12.9"}},"https://unpkg.com/aframe-teleport-controls@0.1.x/package.json":{"name":"aframe-teleport-controls","version":"0.1.0","description":"A-Frame teleport controls component","author":"Fernando Serrano <fernandojsg@gmail.com> (http://fernandojsg.com/)","license":"MIT","main":"index.js","scripts":{"build":"cross-env NODE_ENV=production webpack --config webpack.dev.js","start":"webpack-dev-server --config webpack.dev.js --progress --colors --hot -d --open --inline --content-base examples","dist":"webpack index.js dist/aframe-teleport-controls.js && webpack -p index.js dist/aframe-teleport-controls.min.js","lint":"semistandard -v | snazzy","prepublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && gh-pages -d gh-pages"},"repository":{"type":"git","url":"git+https://github.com/fernandojsg/aframe-teleport-controls.git"},"peerDependencies":{"aframe":"^0.3.2"},"keywords":["aframe","a-frame","aframe-component","aframe-vr","vr","webgl","webvr","mozvr"],"bugs":{"url":"https://github.com/fernandojsg/aframe-teleport-controls/issues"},"homepage":"https://github.com/fernandojsg/aframe-teleport-controls#readme","devDependencies":{"aframe":"^0.3.2","cross-env":"^3.1.3","gh-pages":"^0.11.0","semistandard":"^8.0.0","shx":"^0.1.1","snazzy":"^4.0.0","webpack":"^1.13.0","webpack-dev-server":"^1.16.2"},"semistandard":{"ignore":["examples/build.js","dist/**"]}},"https://unpkg.com/aframe-extras.json-model@^3.0.x/package.json":{"name":"aframe-extras.json-model","version":"3.1.0","description":"Loader for THREE.JSONLoader-compatible models.","author":"Don McCurdy <dm@donmccurdy.com>","license":"MIT","main":"index.js","repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-extras.git"},"peerDependencies":{"aframe":"^0.3.1"},"keywords":["aframe","a-frame","vr","webgl","webvr"]},"https://unpkg.com/aframe-text-component@0.1.x/package.json":{"name":"aframe-text-component","version":"0.1.0","description":"Text component for A-Frame VR.","main":"index.js","scripts":{"test":"karma start ./tests/karma.conf.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/aframe-text-component.git"},"keywords":["aframe","aframe-component","layout","aframe-vr","vr","aframe-layout","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/aframe-text-component/issues"},"homepage":"https://github.com/ngokevin/aframe-text-component#readme","devDependencies":{"aframe-core":"^0.1.3","browserify-css":"^0.8.3","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4"}},"https://unpkg.com/aframe-extras.animation-mixer@^3.0.x/package.json":{"name":"aframe-extras.animation-mixer","version":"3.1.0","description":"Animation mixer for JSON and glTF models.","author":"Don McCurdy <dm@donmccurdy.com>","license":"MIT","main":"index.js","repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-extras.git"},"peerDependencies":{"aframe":"^0.3.1"},"keywords":["aframe","a-frame","vr","webgl","webvr"]},"https://unpkg.com/aframe-physics-system@^1.0.1/package.json":{"name":"aframe-physics-system","version":"1.1.0","description":"Physics system for A-Frame VR, built on Cannon.js","main":"index.js","scripts":{"dev":"budo browser.js:bundle.js -d examples --port 8000","dist":"browserify browser.js -o dist/aframe-physics-system.js && uglifyjs -c -o dist/aframe-physics-system.min.js -- dist/aframe-physics-system.js","test":"karma start ./tests/karma.conf.js","test:once":"karma start ./tests/karma.conf.js --single-run","test:firefox":"karma start ./tests/karma.conf.js --browsers Firefox","test:chrome":"karma start ./tests/karma.conf.js --browsers Chrome","test:ci":"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run --browsers Firefox","preversion":"npm run test:once","preversion:readme":"replace 'aframe-physics-system/v\\d+\\.\\d+\\.\\d+' \"aframe-physics-system/v$npm_package_version\" ./README.md","version":"npm run preversion:readme && npm run dist && git add -A dist README.md","postversion":"git push && git push --tags && npm publish"},"repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-physics-system.git"},"keywords":["aframe","aframevr","vr","three","physics","cannon","webgl","webvr"],"author":"Don McCurdy <dm@donmccurdy.com> (https://www.donmccurdy.com)","license":"MIT","bugs":{"url":"https://github.com/donmccurdy/aframe-physics-system/issues"},"homepage":"https://github.com/donmccurdy/aframe-physics-system#readme","dependencies":{"cannon":"github:schteppe/cannon.js","three-to-cannon":"^1.0.0"},"peerDependencies":{"aframe":"^0.4.0"},"devDependencies":{"aframe":"^0.4.0","browserify":"^13.1.0","budo":"^9.2.1","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.4","karma":"^1.3.0","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.2.0","karma-mocha-reporter":"^2.2.0","karma-sinon-chai":"^1.2.4","mocha":"^3.1.2","replace":"^0.3.0","sinon":"^1.17.6","sinon-chai":"^2.8.0","uglify-js":"^2.7.3"}},"https://unpkg.com/aframe-layout-component@4.x.x/package.json":{"name":"aframe-layout-component","version":"4.0.1","description":"Position and layout child entities in 3D space for A-Frame","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8005 --live --open","dist":"webpack index.js dist/aframe-layout-component.js && webpack -p index.js dist/aframe-layout-component.min.js","postpublish":"npm run dist","test":"karma start ./tests/karma.conf.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/kframe.git"},"keywords":["aframe","aframe-component","layout","aframe-vr","vr","aframe-layout","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/kframe/issues"},"homepage":"https://github.com/ngokevin/kframe/tree/components/layout#readme","devDependencies":{"aframe":"^0.4.0","browserify":"^12.0.1","budo":"^7.1.0","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4","webpack":"^1.14.0"}},"https://unpkg.com/aframe-bmfont-text-component@0.1.x/README.md":{"text":"## aframe-bmfont-text-component\r\n\r\nThis component is useful for rendering bitmap and signed distance field font text in [A-Frame](https://aframe.io). Basically, it wraps Matt DesLauriers' [three-bmfont-text](https://github.com/Jam3/three-bmfont-text) and [load-bmfont](https://github.com/Jam3/load-bmfont).\r\n\r\n![screenshot](http://i.imgur.com/pDDlzAX.png)\r\n\r\n## Properties\r\n\r\n|    Property   |          Description         |     Default Value     |\r\n|:-------------:|:----------------------------:|:---------------------:|\r\n|      text     |  the text you want to appear |          None         |\r\n|     width     |     width of the text box    |          None         |\r\n|     align     |   'left', 'center', 'right'  |          left         |\r\n| letterSpacing | the letter spacing in pixels |           0           |\r\n|   lineHeight  |   the line height in pixels  |           38          |\r\n|      fnt      |      path to 'fnt' file      | https://cdn.rawgit... |\r\n|    fntImage   |    path to font image file   | https://cdn.rawgit... |\r\n|      mode     |      'pre' and 'nowrap'      |        'normal'       |\r\n|     color     |     by RGB, hex, or name     |          #000         |\r\n|    opacity    |    Extent of transparency.   |          1.0          |\r\n\r\nMore details on these properties [here](https://github.com/Jam3/three-bmfont-text#usage).\r\n\r\nExplanation of 'mode' property [here](https://github.com/mattdesl/word-wrapper).\r\n\r\n## Usage\r\n\r\nWrite some text:\r\n\r\n```html\r\n<a-entity bmfont-text=\"text: Hello World;\"></a-entity>\r\n```\r\n\r\nRather than add the bmfont-text component to a blank entity, you can try using the **text primitive**:\r\n\r\n```html\r\n<a-text text=\"Hello World;\"></a-text>\r\n```\r\n\r\nThis is more convenient, but experimental and buggy (e.g. color failing to apply).\r\n\r\nTo change the size of the text, use the [scale](https://aframe.io/docs/0.2.0/components/scale.html) component or position the text closer or further away.\r\n\r\nText can be wrapped by specifying width, but I'm not sure what units three-bmfont-text uses. You will have to play around a bit.\r\n\r\n## Custom Fonts\r\n\r\nA guide for generating SDF fonts can be found [here](https://github.com/libgdx/libgdx/wiki/Distance-field-fonts); here is an example comparing [Arial Black and DejaVu](http://i.imgur.com/iWtXHm5.png). Bitmap fonts also work, but do not look nearly as good.\r\n\r\nDifferent fonts can be specified with the 'fnt' and 'fntImage' properties.\r\n\r\n```html\r\n<a-entity bmfont-text=\"text: Hello World; fnt:../fonts/DejaVu-sdf.fnt; fntImage:../fonts/DejaVu-sdf.png\">\r\n</a-entity>\r\n```\r\n\r\nThanks to [RawGit](http://rawgit.com/), these default to hosted \"DejaVu-sdf.fnt\" and \"DejaVu-sdf.png\" files.\r\n\r\n## Limitations\r\n\r\nThis component does not make use of all of the features of [three-bmfont-text](https://github.com/Jam3/three-bmfont-text) and its sister modules, if you require more advanced functionality such as tabSize and start and end indices, I recommend forking this component and modifying it. Pull requests are welcome, but please include a test example.\r\n\r\nBitmap font rendering limits you to the characters included in the font (Unicode this is not). SDF font (in particular) tends to smooth sharp edges though [there are ways around this](https://lambdacube3d.wordpress.com/2014/11/12/playing-around-with-font-rendering/).\r\n\r\n#### Additional Information\r\n\r\nIf you are interested in text rendering in WebGL/ThreeJS/A-Frame and want to learn more, I recommend reading the documentation for [three-bmfont-text](https://github.com/Jam3/three-bmfont-text). \r\n\r\nHere are some additional resources:\r\n\r\n- ['It’s 2015 and drawing text is still hard (WebGL, ThreeJS)' by Parris Khachi](https://www.eventbrite.com/engineering/its-2015-and-drawing-text-is-still-hard-webgl-threejs/)\r\n- [Valve's original paper](http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf)\r\n- ['Hacking with THREE.js' by Matt DesLauriers](http://slides.com/mattdeslauriers/hacking-with-three-js#/13)\r\n\r\n## Installation\r\n\r\n#### Browser\r\n\r\nInstall and use by directly including the [browser files](dist):\r\n\r\n```html\r\n<head>\r\n  <title>My A-Frame Scene</title>\r\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\r\n  <script src=\"https://rawgit.com/bryik/aframe-bmfont-text-component/master/dist/aframe-bmfont-text-component.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n  <a-scene>\r\n    <a-entity bmfont-text=\"text: Hello world\"></a-entity>\r\n  </a-scene>\r\n</body>\r\n```\r\n\r\n#### NPM\r\n\r\nInstall via NPM:\r\n\r\n```bash\r\nnpm install aframe-bmfont-text-component\r\n```\r\n\r\nThen register and use.\r\n\r\n```js\r\nrequire('aframe');\r\nrequire('aframe-bmfont-text-component');\r\n```\r\n","url":"https://unpkg.com/aframe-bmfont-text-component@0.1.x/README.md"},"https://unpkg.com/aframe-alongpath-component@^0.2.1/README.md":{"text":"## aframe-alongpath-component\nA component for [A-Frame](https://aframe.io) that allows entities to follow predefined paths.\n\nThanks to https://jsbin.com/dasefeh/edit?html,output for the basic concept.\n\n![](http://lab.immersiveweb.ch/assets/aframe-alongpath-component.gif)\n\n### Properties\n\n| Property | Description                                                                          | Default Value |\n| -------- | -----------                                                                          | ------------- |\n| path     | One or more point on the path the entity should follow (Format: \"x,y,z x,y,z x,y,z\") | ''            |\n| closed   | Whether or not the path should be closed automatically                               | false         |\n| dur      | Duration in milliseconds for the object to follow the entire path                    | 1000          |\n| delay    | Number of milliseconds to wait for the animation to begin                            | 2000          |\n| loop     | Whether or not the animation should loop                                             | false         |\n| inspect  | Whether or not the animation path should be visible and editable in A-Frame Inspector| false         |\n\n### Usage with A-Frame Inspector\n\nYou can use the [A-Frame Inspector](https://github.com/aframevr/aframe-inspector) to manually modify the predefined paths. To do so, you can open the Inspector as usual, then set the \"inspector\" Property to true. This will cause the path to be displayed visually as a line while the predefined path-points (received from the \"path\"-Property) are showed as a small box. You can now change the path in the inspector by selecting one of the boxes and changing its position using the transformation tools of the editor. The path will change instantly.\n\n![](http://lab.immersiveweb.ch/assets/aframe-alongpath-component-inspector.gif)\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/protyze/aframe-alongpath-component/master/dist/aframe-alongpath-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-sphere color=\"red\" radius=\"0.25\" position=\"0 0 0\"\n              alongpath=\"path:2,2,-5 -2,1,-2.5 0,1,-1; closed:false; dur:5000; delay:4000; inspector:false;\">\n    </a-sphere>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-alongpath-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-alongpath-component');\n```","url":"https://unpkg.com/aframe-alongpath-component@^0.2.1/README.md"},"https://unpkg.com/aframe-teleport-controls@0.1.x/README.md":{"text":"# aframe-teleport-controls\r\nTeleport component (Work in progress)\r\n\r\n![Screenshot](https://github.com/fernandojsg/aframe-teleport-controls/raw/master/teleport.png)\r\n\r\n## Properties\r\n\r\n| Property    | Description                     | Default Value    |\r\n| --------    | -----------                     | -------------    |\r\n| type       | Type of teleport: line or parabolic         | parabolic   |\r\n| button       | Button used to launch the teleport         | trackpad   |\r\n| collisionEntity | Selector of the mesh used to check the collisions. If no value provided a plane Y=0 is used |  |\r\n| hitEntity | Entity used to show at the hitting position. If no value provided a cylinder will be used as default. |           |\r\n| hitCylinderColor | Color used for the default `hitEntity` primitives | #99ff99          |\r\n| hitCylinderRadius | Radius used for the default `hitEntity` primitives | 0.25          |\r\n| hitCylinderHeight | Height used for the default `hitEntity` primitives | 0.3 |\r\n| maxLength | Max. length for line teleport | 10 |\r\n| curveHitColor | Color used for the curve when hit the mesh | #99ff99          |\r\n| curveMissColor | Color used for the curve when it doesn't hit anything | #ff0000          |\r\n| curveNumberPoints | Number of points used in the curve | 30          |\r\n| curveLineWidth | Line width of the curve | 0.025          |\r\n| curveShootingSpeed | Curve shooting speed, as bigger value, farther distance. | 5          |\r\n| maxLength | Max length of the ray when using type=line teleport | 10 |\r\n| landingNormal | Normal vector to detect collisions with the `collisionEntity` | (0, 1, 0)          |\r\n| landingMaxAngle | Angle threshold (in degrees) used together with `landingNormal` to detect if the mesh is so steep to jump to it. | 45          |\r\n\r\n### Usage\r\n\r\n#### Browser Installation\r\n\r\nInstall and use by directly including the [browser files](dist):\r\n\r\n```html\r\n<head>\r\n  <title>My A-Frame Scene</title>\r\n  <script src=\"https://aframe.io/releases/0.3.2/aframe.min.js\"></script>\r\n  <script src=\"https://rawgit.com/fernandojsg/aframe-teleport-controls/master/dist/aframe-teleport-controls.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n  <a-scene>\r\n    <a-entity teleport-controls vive-controls=\"hand: left\"></a-entity>\r\n  </a-scene>\r\n</body>\r\n```\r\n\r\n#### NPM Installation\r\n\r\nInstall via NPM:\r\n\r\n```bash\r\nnpm install aframe-teleport-controls\r\n```\r\n\r\nThen register and use.\r\n\r\n```js\r\nrequire('aframe-teleport-controls');\r\n```\r\n","url":"https://unpkg.com/aframe-teleport-controls@0.1.x/README.md"},"https://unpkg.com/aframe-stereo-component@0.2.x/package.json":{"name":"aframe-stereo-component","version":"0.2.0","description":"Stereoscopic component for A-Frame VR.","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack browser.js dist/aframe-stereo-component.js && webpack -p browser.js dist/aframe-stereo-component.min.js","postpublish":"npm run dist","preghpages":"npm run build && rm -rf gh-pages && cp -r examples gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","test":"karma start ./tests/karma.conf.js","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"https://github.com/oscarmarinmiro/aframe-stereo-component.git"},"keywords":["aframe","aframe-component","layout","aframe-vr","vr","aframe-layout","mozvr","webvr","stereo","stereoscopic","video","equirectangular"],"author":"Óscar Marín Miró <oscar@outliers.es> @oscarmarinmiro","license":"MIT","bugs":{"url":"https://github.com/oscarmarinmiro/aframe-stereo-component/issues"},"homepage":"https://github.com/oscarmarinmiro/aframe-stereo-component#readme","devDependencies":{"aframe":"^0.2.0","browserify":"^12.0.1","browserify-css":"^0.8.3","budo":"^7.1.0","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","ghpages":"0.0.3","inquirer":"^0.12.0","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4","shelljs":"^0.6.0","webpack":"^1.12.9"}},"https://unpkg.com/aframe-sun-sky@^3.0.1/README.md":{"text":"## aframe-sky-shader\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/kframe/tree/master/components/sun-sky/dist/aframe-sun-sky.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-sun-sky></a-sun-sky>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-sun-sky\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-sun-sky');\n```\n","url":"https://unpkg.com/aframe-sun-sky@^3.0.1/README.md"},"https://unpkg.com/aframe-animation-component@^3.0.2/README.md":{"text":"## aframe-animation-component\n\nAn animation component for [A-Frame](https://aframe.io) using\n[anime.js](https://github.com/juliangarnier/anime).\n\n![animation](https://cloud.githubusercontent.com/assets/674727/16903995/34a56db0-4c42-11e6-9bd1-356b291f2d93.gif)\n\n### Why?\n\nA-Frame has an `<a-animation>` API out of the box. Why build a component version?\n\n- **Imperative Ergonomics:** Imperatively set animations and all of its\n  properties with a single `setAttribute` call. With `<a-animation>`, we must\n  do `createElement`, multiple `setAttribute`s, `appendChild`, and\n  `addEventListener('loaded')`.\n- **Synchronous:** Setting a component is synchronous, meaning it takes effect\n  immediately. With `<a-animation>`, we must wait for it to append to the DOM\n  and register a callback listener.\n- **Consistency with the Framework:** The animation component fits into\n  A-Frame's entity-component-system framework. The `<a-animation>` tag is the\n  only outlier in which we must use a DOM element to modify an entity.\n- **Simpler API:** The animation component uses anime.js, a popular and simple\n  JavaScript animation library. `<a-animation>`'s API is loosely based off of\n  Web Animations draft specification which is overly complex.\n- **Easier Maintenance:** The animation component uses A-Frame's component API\n  as well as anime.js. `<a-animation>` uses the Custom Element polyfill directly\n  with tween.js. anime.js's features makes the animation codebase much slimmer\n  (140 vs 550 lines of code).\n- **Features:** The animation component has the features of the newly popular\n  anime.js library (e.g., color interpolation).\n- **Faster Development:** Being detached from the A-Frame core library means faster\n  iteration of features. Due to being easier to maintain, having more features, and\n  not being tied to A-Frame versions, we can add things quickly such as timeline support.\n\n### API\n\n#### Component Name\n\nBase name is `animation`. Although we can attach multiple animations to one\nentity by name-spacing the component with double underscores (`__`):\n\n```html\n<a-entity animation=\"property: rotation\"\n          animation__2=\"property: position\"\n          animation__color=\"property: material.color\"></a-entity>\n```\n\n#### Properties\n\n| Property    | Description                                                                                                                           | Default Value | Values                  |\n| --------    | -----------                                                                                                                           | ------------- | ------                  |\n| delay       | How long (milliseconds) to wait before starting.                                                                                      | 0             |                         |\n| dir         | Which dir to go from `from` to `to`.                                                                                            | normal        | alternate, reverse      |\n| dur         | How long (milliseconds) each cycle of the animation is.                                                                               | 1000          |                         |\n| easing      | Easing function of animation. To ease in, ease out, ease in and out.                                                                  | easeInQuad    | See [easings](#easings) |\n| elasticity  | How much to bounce (higher is stronger).                                                                                              | 400           |                         |\n| loop        | Whether to repeat animation indefinitely.                                                                                             | false         |                         |\n| pauseEvents | Comma-separated list of events to listen to to pause.                                                                                 | null          |\n| property    | Property to animate. Can be a component name, a dot-delimited property of a component (e.g., `material.color`), or a plain attribute. |               |                         |\n| round       | Whether to round values.                                                                                                              | false         |                         |\n| startEvents | Comma-separated list of events to listen to before playing. Animation will not autoplay if specified.                                 | null          |\n\n\n#### Easings\n\nChoose one type from the `Type` column, and combine it with one function from\nthe `Function` column. For example: `easeInOutElastic`. The only exception is\n`linear` which stands on its own.\n\n| Type      | Function |\n| --------  | -------- |\n| easeIn    | Quad     |\n| easeOut   | Cubic    |\n| easeInOut | Quart    |\n|           | Quint    |\n|           | Expo     |\n|           | Sine     |\n|           | Circ     |\n|           | Elastic  |\n|           | Back     |\n|           | Bounce   |\n\n#### Events\n\n| Property                 | Description                                                               |\n| --------                 | -----------                                                               |\n| animationbegin           | Animation began.                                                          |\n| animationcomplete        | Animation completed.                                                      |\n| animation__<ID>-begin    | Animation completed. Different event emitted depending on animation name. |\n| animation__<ID>-complete | Animation completed. Different event emitted depending on animation name. |\n\n### Installation\n\n#### Browser\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-animation-component/master/dist/aframe-animation-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-cylinder color=\"#F55\" radius=\"0.1\"\n                animation=\"property: color; dir: alternate; dur: 1000;\n                           easing: easeInSine; loop: true; to: #5F5\"\n                animation__scale=\"property: scale; dir: alternate; dur: 200;\n                           easing: easeInSine; loop: true; to: 1.2 1 1.2\"\n                animation__yoyo=\"property: position; dir: alternate; dur: 1000;\n                                 easing: easeInSine; loop: true; to: 0 2 0\">\n    </a-cylinder>\n  </a-scene>\n</body>\n```\n\n#### npm\n\nInstall via npm:\n\n```bash\nnpm install aframe-animation-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-animation-component');\n```\n","url":"https://unpkg.com/aframe-animation-component@^3.0.2/README.md"},"https://unpkg.com/aframe-particle-system-component@^1.0.4/README.md":{"text":"# aframe-particle-system-component\n\nCreate particle systems with A-Frame.\n\n![particle-system](https://cloud.githubusercontent.com/assets/674727/19012611/92d694fa-876f-11e6-8b6b-1b93dcd586a8.gif)\n\n[EXAMPLES](http://ideaspacevr.github.io/aframe-particle-system-component/)\n\n### Properties\n\n| Property | Description                                                                               | Default Value |\n| --------- | -----------                                                                               | ------------- |\n| preset | Preset configuration. Possible values are: `default`, `dust`, `snow`, `rain`.                | `default`        |\n| maxAge | The particle's maximum age in seconds.                                                       | `6`        |\n| positionSpread | Describes this emitter's position variance on a per-particle basis.                  | `0 0 0`        |\n| type   | The default distribution this emitter should use to control its particle's spawn position and force behaviour. Possible values are `1` (box), `2` (sphere), `3` (disc) | 1 (box)       |\n| rotationAxis | Describes this emitter's axis of rotation. Possible values are `x`, `y` and `z`.       | `x`        |\n| rotationAngle | The angle of rotation, given in radians. `Dust` preset is `3.14`.                     | `0`        |\n| accelerationValue | Describes this emitter's base acceleration.                                       | `0, -10, 0`  |\n| accelerationSpread | Describes this emitter's acceleration variance on a per-particle basis.          | `10 0 10`  |\n| velocityValue | Describes this emitter's base velocity.                                               | `0 25 0`   |\n| velocitySpread | Describes this emitter's acceleration variance on a per-particle basis.              | `10 7.5 10` |\n| color | Describes a particle's color. This property is a \"value-over-lifetime\" property, meaning an array of values can be given to describe specific value changes over a particle's lifetime.                                                     | `#0000FF,#FF0000` |\n| size | Describes a particle's size.                                                      | `1`    |\n| direction | The direction of the emitter. If value is `1`, emitter will start at beginning of particle's lifecycle. If value is `-1`, emitter will start at end of particle's lifecycle and work it's way backwards.                                                     | `1`        |\n| duration | The duration in seconds that this emitter should live for. If not specified, the emitter will emit particles indefinitely.   | `null`         |\n| particleCount | The total number of particles this emitter will hold. NOTE: this is not the number of particles emitted in a second, or anything like that. The number of particles emitted per-second is calculated by particleCount / maxAge (approximately!)                  | `1000`        |\n| texture | The texture used by this emitter.                                              | `./images/star2.png`        |\n| randomize | When a particle is re-spawned, whether it's position should be re-randomised or not. Can incur a performance hit. | `false`         |\n| opacity | Either a single number to describe the opacity of a particle. | `1` |\n| maxParticleCount   |                                                      | `250000`        |\n\nI am just exposing a subset of all API parameters through this component. See http://squarefeet.github.io/ShaderParticleEngine/docs/api/ for a complete API description.\n\n### Usage Examples\n\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: dust\"></a-entity>\n```\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: snow\"></a-entity>\n```\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: rain\"></a-entity>\n```\n\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: dust; texture: ./images/star2.png; color: #0000FF,#00FF00,#FF0000\"></a-entity>\n```\n\n\n### Browser Installation\n\nInstall and use by directly including the [browser files](dist). Make sure the images directory (particle textures) is in the same\ndirectory as the component.\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>A-Frame Particle System Component Example</title>\n    <meta name=\"description\" content=\"Hello, World!\">\n    <script src=\"./aframe.min.js\"></script>\n    <script src=\"./aframe-particle-system-component.js\"></script>\n  </head>\n  <body>\n    <a-scene>\n\n      <!-- particle system uses 'default' preset, setting custom colors //-->\n      <a-entity position=\"0 2.25 -15\" particle-system=\"color: #EF0000,#44CC00\"></a-entity>\n\n      <a-sphere position=\"0 1.25 -1\" radius=\"1.25\" color=\"#EF2D5E\"></a-sphere>\n      <a-box position=\"-1 0.5 1\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\"  color=\"#4CC3D9\"></a-box>\n      <a-cylinder position=\"1 0.75 1\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"></a-cylinder>\n      <a-plane rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane>\n\n      <a-sky color=\"#000000\"></a-sky>\n\n    </a-scene>\n  </body>\n</html>\n```\n\n### npm\n\nhttps://www.npmjs.com/package/aframe-particle-system-component\n\n### Local Development\n\n```\nnpm install\nnpm run dev\n```\n\n### Credits\n\nBased on the ShaderParticleEngine by Squarefeet: https://github.com/squarefeet/ShaderParticleEngine\n","url":"https://unpkg.com/aframe-particle-system-component@^1.0.4/README.md"},"https://unpkg.com/aframe-extras.object-model@^3.0.x/README.md":{"text":"\n# aframe-extras.object-model\n\nLoader for THREE.ObjectLoader-compatible models.\n  ","url":"https://unpkg.com/aframe-extras.object-model@^3.0.x/README.md"},"https://unpkg.com/aframe-crawling-cursor@^1.0.2/README.md":{"text":"# Crawling Cursor\n\nAn A-Frame component to move cursor along object's surface.\n\n**[DEMO PAGE (link)](https://jujunjun110.github.io/crawlingcursor/)**\n\n![DEMO](demo.gif)\n\n## API\n\n| Property | Description | Default Value |\n| -------- | ----------- | ------------- |\n| target   | selector(#id) of a cursor | null          |\n\n## Usage\n\n1.add `id` on `cursor` object.\n```html\n<a-cursor id=\"my-cursor\"></a-cursor>\n```\n\n2.add `raycaster` component and `crawling-cursor` component with a target cursor selector on `camera` object. \n```html\n<a-camera raycaster crawling-cursor=\"target: #my-cursor\"></a-camera>\n```\n\nnote: If you want some object to avoid intersection, add `ignore-ray` class to them.\n```html \n<!-- cursor will not be along with this box -->\n<a-box class=\"ignore-ray\"></a-box>\n```\n\n## Installation \n\n### browser\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://cdn.rawgit.com/jujunjun110/aframe-crawling-cursor/master/dist/aframe-crawling-cursor.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-cursor id=\"my-cursor\"></a-cursor>\n    <a-camera raycaster crawling-cursor=\"target: #my-cursor\"></a-camera>\n  </a-scene>\n</body>\n```\n\n### npm \nInstall via npm:\n\n`$npm install aframe-crawling-cursor`\n\nThen register and use. \n\n```javascript\nrequire('aframe');\nrequire('aframe-crawling-cursor');\n```\n","url":"https://unpkg.com/aframe-crawling-cursor@^1.0.2/README.md"},"https://unpkg.com/aframe-extras.json-model@^3.0.x/README.md":{"text":"\n# aframe-extras.json-model\n\nLoader for THREE.JSONLoader-compatible models.\n  ","url":"https://unpkg.com/aframe-extras.json-model@^3.0.x/README.md"},"https://unpkg.com/aframe-firebase-component@^3.0.0/README.md":{"text":"## aframe-firebase-component\n\n> Learn [how to get started with Firebase](https://firebase.google.com/docs/web/setup).\n\nA Firebase component for [A-Frame](https://aframe.io).\n\nComes with a Firebase broadcast component for multiuser experiences\nout-of-the-box by syncing entities' component data to Firebase realtime\ndatabase. The parent-child relationships between entities are maintained as\nwell as long as all entities in the hierarchy have the `broadcast` component\nattached.\n\nTo deploy with GitHub pages when setting up Firebase with the [Firebase\nConsole](https://firebase.google.com/console/), go into *Auth*, and add your\nGitHub pages domain (e.g., `ngokevin.github.io`). This will whitelist your\ndomain.\n\nIf you want to allow unauthenticated users (most should), then go into\n*Database*, click on *Rules*, and set both the `.read` and `.write` to `true`.\n\n### Properties\n\n#### firebase\n\nFirebase configuration component for `<a-scene>`.  The `apiKey`, `authDomain`,\n`databaseURL`, and `storageBucket` are provided by Firebase (go to the Firebase\nconsole for your app and click on \"Add Firebase to your web app\").\n\nThe optional `channel` name allows multiple A-Frame apps, or multiple\ninstances/rooms of the same app, to share one Firebase bucket. If no channel is\ngiven, 'default' is used. The channel name can also be specified in the URL:\n`mysite.com?aframe-firebase-channel=oahu`\n\nThe optional `interval` sets how often (in milliseconds) data is sent to Firebase. \nDefault interval is 10 milliseconds.\n\n| Property      | Description                     | Required \n| --------      | -----------                     | -------- \n| apiKey        | API key for Firebase.           | yes      \n| authDomain    | Firebase authentication domain. | yes       \n| channel       | Name of room/namespace.         | no       \n| databaseURL   | Firebase database URL.          | yes      \n| interval      | Milliseconds between broadcasts.| no      \n| storageBucket | Firebase storage bucket URL.    | yes     \n\n\n#### firebase-broadcast\n\nBroadcast component data to be synced across all clients using Firebase realtime database.\n\n| Property   | Description                                          | Default Value      |\n| --------   | -----------                                          | -------------      |\n| components | List of comma-delimited component names to broadcast | position, rotation |\n| componentsOnce | Sync initial value only; for components that don't change |\n\nFor example:\n\n```html\n<a-entity firebase-broadcast=\"components: material, geometry\"><a-entity>\n```\n\nTo broadcast individual component properties, use the `component|property` syntax:\n\n```html\n<a-entity firebase-broadcast=\"components: material|color, geometry|width\"><a-entity>\n```\n\n### Accessing the Firebase Object\n\nYou can access the Firebase object:\n\n```js\ndocument.querySelector('a-scene').systems.firebase.firebase\n```\n\nIf you wanted to add game logic or features such as chat.\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-firebase-component/master/dist/aframe-firebase-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene firebase=\"apiKey: abc;\n                     authDomain: mysite.firebaseapp.com;\n                     databaseURL: https://mysite.firebaseio.com;\n                     storageBucket: mysite.appspot.com\">\n    <a-assets>\n      <!-- Using mixins to decrease amount of data send over the wire. -->\n      <a-mixin id=\"avatar-head\"\n              geometry=\"primitive: box; depth: 0.3; height: 0.3; width: 0.3\"\n              material=\"color: #222\"></a-mixin>\n    </a-assets>\n\n    <a-entity id=\"avatar\" mixin=\"avatar-head\"\n              camera look-controls wasd-controls\n              firebase-broadcast=\"components: mixin, position, rotation\"\n              position=\"0 1.8 5\">\n    </a-entity>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-firebase-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-firebase-component');\n```\n\n#### FAQ\n\n*Why can't I see anyone else?*\n\nTry positioning everyone at a different start point. In\n`examples/presentation/components/`, there is a `random-position-at` component\nthat starts everyone at a different position (more specifically at one of the\nchairs).\n\n## Authors\n\n- [Kevin Ngo](https://twitter.com/andgokevin), Mozilla\n- [Amber Roy](https://twitter.com/amberroyvr), AltspaceVR\n","url":"https://unpkg.com/aframe-firebase-component@^3.0.0/README.md"},"https://unpkg.com/aframe-layout-component@3.x.x/README.md":{"text":"## aframe-layout-component\n\nLayout component for [A-Frame](https://aframe.io).\n\n![](https://cloud.githubusercontent.com/assets/674727/11851982/662a8dee-a3ea-11e5-92cf-4b814e2c494d.png)\n\nAutomatically positions child entities in 3D space, with several layouts to\nchoose from. Define the layout on the parent entity:\n\n```html\n<a-entity layout=\"type: line; margin: 2\">\n  <a-box></a-box>\n  <a-box></a-box>\n  <a-box></a-box>\n</a-entity>\n```\n\nAnd then the positions will automatically be calculated and set:\n\n```html\n<a-entity layout=\"type: line; margin: 2\">\n  <a-box position=\"0 0 0\"></a-box>\n  <a-box position=\"2 0 0\"></a-box>\n  <a-box position=\"4 0 0\"></a-box>\n</a-entity>\n```\n\nAs entities are added or removed, the layout component will trigger a reflow on\nthe positions.\n\nWe move then entire group around while maintaining the layout:\n\n```html\n<a-entity layout=\"type: line; margin: 2\" position=\"0 5 -5\">\n  <a-box position=\"0 0 0\"></a-box>\n  <a-box position=\"2 0 0\"></a-box>\n  <a-box position=\"4 0 0\"></a-box>\n</a-entity>\n```\n\n### Properties\n\n| Property  | Description                                                                               | Default Value |\n| --------- | -----------                                                                               | ------------- |\n| type      | Type of layout. Can be one of `box`, `circle`, `cube`, `dodecahedron`, `line`, `pyramid`. | `line`        |\n| column    | Number of columns (for type `box`).                                                       | 1             |\n| margin    | Margin in meters (for type `box`, `line`).                                                | 1             |\n| radius    | Radius in meters (for type `circle`, `cube`, `dodecahedron`, `pyramid`.                   | 1             |\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-layout-component/master/dist/aframe-layout-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-entity layout=\"type: circle; radius: 10\">\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n    </a-entity>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-layout-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-layout-component');\n```\n","url":"https://unpkg.com/aframe-layout-component@3.x.x/README.md"},"https://unpkg.com/aframe-text-component@0.3.x/README.md":{"text":"## aframe-text-component\n\nA text geometry component for [A-Frame](https://aframe.io) VR. The text geometry\ncomponent (shape) can be paired with the [material component](https://aframe.io/docs/components/material.html) (appearance).\n\n![screenshot](https://cloud.githubusercontent.com/assets/674727/11915616/59342aca-a663-11e5-9b6b-8a0b243fe5da.png)\n\n## Properties\n\n| Property       | Description | Default Value |\n| --------       | ----------- | ------------- |\n| bevelEnabled   |             | false         |\n| bevelSize      |             | 8             |\n| bevelThickness |             | 12            |\n| curveSegments  |             | 12            |\n| font           |             | helvetiker    |\n| height         |             | 0.05          |\n| size           |             | 0.5           |\n| style          |             | normal        |\n| text           |             | None          |\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-text-component/master/dist/aframe-text-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-entity text=\"text: What's up\"></a-entity>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-text-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-text-component');\n```\n\n## Using Different Fonts\n\nThe text component uses `typeface.js`, fonts defined in JS files for three.js.\ntypeface fonts can be generated from regular fonts using this [typeface\nfont generator](http://gero3.github.io/facetype.js/). You can also find some\nsample generated fonts, currently in the `examples/fonts` directory in the [three.js\nrepository](https://github.com/mrdoob/three.js).\n\nBy default, the text component only comes with one typeface font, Helvetiker\n(Regular). Each font is fairly large, from at least 60KB to hundreds of KBs.\n\nTo include a font for use with the text component, append or require the\ntypeface font *after* this component. This component uses `FontUtils` which\nshould be initialized before adding fonts.\n\nFor example in HTML:\n\n```html\n<html>\n  <head>\n    <title>My A-Frame Scene</title>\n    <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n    <script src=\"https://rawgit.com/ngokevin/aframe-text-component/master/dist/aframe-text-component.min.js\"></script>\n    <script src=\"myfont.typeface.js\"></script>\n  </head>\n  <body>\n    <a-scene>\n      <a-assets>\n        <a-mixin id=\"font\" text=\"font: myfont\"></a-mixin>\n      </a-assets>\n      <a-entity mixin=\"font\" text=\"text: Hello\"></a-entity>\n      <a-entity mixin=\"font\" text=\"text: World\"></a-entity>\n    </a-scene>\n  </body>\n</html>\n```\n\nOr in JS:\n\n```js\nrequire('aframe');\nrequire('aframe-text-component');\nrequire('./fonts/myfont.typeface');\n```\n","url":"https://unpkg.com/aframe-text-component@0.3.x/README.md"},"https://unpkg.com/aframe-text-component@0.1.x/README.md":{"text":"## aframe-text-component\n\nA text component for [A-Frame](https://aframe.io) VR.\n\n## Usage\n\n```bash\nnpm install aframe-text-component\n```\n\n```js\nAFrame = require('aframe-core');\nAFrame.registerComponent('text', require('aframe-text-component'));\n```\n\n| Property | Description | Default Value |\n| -------- | ----------- | ------------- |\n| bevelEnabled |             | false              |\n| bevelSize |             | 8              |\n| bevelThickness |             | 12              |\n| curveSegments |             | 12              |\n| font |             | helvetiker              |\n| height |             | 50              |\n| size |             | 12              |\n| style |             | normal              |\n| text |             | None              |\n| weight |             | normal              |\n","url":"https://unpkg.com/aframe-text-component@0.1.x/README.md"},"https://unpkg.com/aframe-extras.animation-mixer@^3.0.x/README.md":{"text":"\n# aframe-extras.animation-mixer\n\nAnimation mixer for JSON and glTF models.\n  ","url":"https://unpkg.com/aframe-extras.animation-mixer@^3.0.x/README.md"},"https://unpkg.com/aframe-physics-system@^1.0.1/README.md":{"text":"# Physics for A-Frame VR\n\n[![Build Status](https://travis-ci.org/donmccurdy/aframe-physics-system.svg?branch=master)](https://travis-ci.org/donmccurdy/aframe-physics-system)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/donmccurdy/aframe-physics-system/master/LICENSE)\n\nComponents for A-Frame physics integration, built on [CANNON.js](http://schteppe.github.io/cannon.js/).\n\n![d6590832-8bdb-11e6-9336-658b00bc0460 3](https://cloud.githubusercontent.com/assets/1848368/19297499/806d059a-9013-11e6-9b20-c03294acbc4c.png)\n\n> Image credit [@andgokevin](https://twitter.com/andgokevin).\n\n## Usage (Scripts)\n\nIn the [dist/](https://github.com/donmccurdy/aframe-physics-system/tree/master/dist) folder, download the full or minified build. Include the script on your page, and all components are automatically registered for you:\n\n```html\n<script src=\"//cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.1.0/dist/aframe-physics-system.min.js\"></script>\n```\n\nCDN builds for aframe-physics-system/v1.1.0:\n\n- [aframe-physics-system.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.1.0/dist/aframe-physics-system.js) *(development)*\n- [aframe-physics-system.min.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.1.0/dist/aframe-physics-system.min.js) *(production)*\n\n## Usage (NPM)\n\n```\nnpm install --save aframe-physics-system\n```\n\n```javascript\n// my-app.js\nvar physics = require('aframe-physics-system');\nphysics.registerAll();\n```\n\nOnce installed, you'll need to compile your JavaScript using something like [Browserify](http://browserify.org/) or [Webpack](http://webpack.github.io/). Example:\n\n```bash\nnpm install -g browserify\nbrowserify my-app.js -o bundle.js\n```\n\n`bundle.js` may then be included in your page. See [here](http://browserify.org/#middle-section) for a better introduction to Browserify.\n\n## Components – `dynamic-body` and `static-body`\n\nThe `dynamic-body` and `static-body` components may be added to any `<a-entity/>` that contains a mesh. Generally, each scene will have at least one `static-body` for the ground, and one or more `dynamic-body` instances that the player can interact with.\n\n- **dynamic-body**: A freely-moving object. Dynamic bodies have mass, collide with other objects, bounce or slow during collisions, and fall if gravity is enabled.\n- **static-body**: A fixed-position or animated object. Other objects may collide with static bodies, but static bodies themselves are unaffected by gravity and collisions.\n\n| Property       | Dependencies     | Default | Description                                 |\n|----------------|------------------|---------|---------------------------------------------|\n| shape          | —                | `auto`  | `auto`, `box`, `cylinder`, `sphere`, `hull` |\n| mass           | `dynamic-body`   | 5       | Simulated mass of the object, > 0.          |\n| linearDamping  | `dynamic-body`   | 0.01    | Resistance to movement.                     |\n| angularDamping | `dynamic-body`   | 0.01    | Resistance to rotation.                     |\n| sphereRadius   |  `shape:sphere`  | —       | Override default radius of bounding sphere. |\n| cylinderAxis   | `shape:cylinder` | —       | Override default axis of bounding cylinder. |\n\n### Basics\n\n```html\n<!-- The debug:true option creates a wireframe around each physics body. If you don't see a wireframe,\n     the physics system may be unable to parse your model without a shape:box or shape:hull option. -->\n<a-scene physics=\"debug: true\">\n\n  <!-- Camera -->\n  <a-entity camera look-controls></a-entity>\n\n  <!-- Floor -->\n  <a-plane static-body></a-plane>\n\n  <!-- Immovable box -->\n  <a-box static-body position=\"0 0.5 -5\" width=\"3\" height=\"1\" depth=\"1\"></a-box>\n\n  <!-- Dynamic box -->\n  <a-box dynamic-body position=\"5 0.5 0\" width=\"1\" height=\"1\" depth=\"1\"></a-box>\n\n</a-scene>\n```\n\n## Components – `constraint`\n\nThe `constraint` component is used to bind physics bodies together using hinges, fixed distances, or fixed attachment points.\n\nExample:\n\n```html\n<a-box id=\"other-box\" dynamic-body />\n<a-box constraint=\"target: #other-box;\" dynamic-body /> \n```\n\n| Property         | Dependencies    | Default | Description |\n| --- | --- | --- | --- |\n| type             | —               | `lock`  | Type of constraint. Options: `lock`, `distance`, and more to come. |\n| target           | —               | —       | Selector for a single entity to which current entity should be bound. |\n| maxForce         | —               | 1e6     | Maximum force that may be exerted to enforce this constraint. |\n| collideConnected | —               | true    | If true, connected bodies may collide with one another. |\n| wakeUpBodies     | —               | true    | If true, sleeping bodies are woken up by this constraint. |\n| distance         | `type:distance` | auto    | Distance at which bodies should be fixed. Default, or 0, for current distance. |\n\n## Using the CANNON.js API\n\nFor more advanced physics, use the CANNON.js API with custom JavaScript and A-Frame components. The [CANNON.js documentation](http://schteppe.github.io/cannon.js/docs/) and source code offer good resources for learning to work with physics in JavaScript.\n\nIn A-Frame, each entity's `CANNON.Body` instance is exposed on the `el.body` property. To apply a quick push to an object, you might do the following:\n\n```html\n<a-scene>\n  <a-entity id=\"nyan\" dynamic-body=\"shape: hull\" obj-model=\"obj: url(nyan-cat.obj)\"></a-entity>\n  <a-plane static-body></a-plane>\n</a-scene>\n```\n\n```javascript\nvar el = sceneEl.querySelector('#nyan');\nel.body.applyImpulse(\n  /* impulse */        new CANNON.Vec3(0, 1, -1),\n  /* world position */ new CANNON.Vec3().copy(el.getComputedAttribute('position'))\n);\n```\n\n## Body Shapes\n\nBody components will attempt to find an appropriate CANNON.js shape to fit your model. When defining an object you may choose a shape or leave the default, `auto`. Select a shape carefully, as there are performance implications with different choices:\n\n* **Auto** (`auto`) – Chooses automatically from the available shapes.\n* **Box** (`box`) – Great performance, compared to Hull or Trimesh shapes, and may be fitted to custom models.\n* **Cylinder** (`cylinder`) – See `box`. Adds `cylinderAxis` option.\n* **Sphere** (`sphere`) – See `box`. Adds `sphereRadius` option.\n* **Convex** (`hull`) – Wraps a model like shrink-wrap. Convex shapes are more performant and better supported than Trimesh, but may still have some performance impact when used as dynamic objects.\n* **Primitives** – Plane/Cylinder/Sphere. Used automatically with the corresponding A-Frame primitives.\n* **Trimesh** – *Deprecated.* Not available as a custom shape, but may be chosen as a last resort for custom geometry. Trimeshes adapt to fit custom geometry (e.g. a `.OBJ` or `.DAE` file), but have very minimal support. Arbitrary trimesh shapes are difficult to model in any JS physics engine, will \"fall through\" certain other shapes, and have serious performance limitations.\n* **Compound** – *In progress.* Compound shapes require a bit of work to set up, but allow you to use multiple primitives to define a physics shape around custom models. These will generally perform better, and behave more accurately, than Trimesh or Convex shapes. For example, a stool might be modeled as a cylinder-shaped seat, on four long cylindrical legs.\n\nFor more details, see the CANNON.js [collision matrix](https://github.com/schteppe/cannon.js#features).\n\nExample using a bounding box for a custom model:\n\n```html\n<!-- Box -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: box; mass: 2\"></a-entity>\n\n<!-- Cylinder -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: cylinder; cylinderAxis: y; mass: 5\"></a-entity>\n```\n\n## Collision Events\n\nCANNON.js generates events when a collision is detected, which are propagated onto the associated A-Frame entity. Example:\n\n```javascript\nvar playerEl = document.querySelector('[camera]');\nplayerEl.addEventListener('collide', function (e) {\n  console.log('Player has collided with body #' + e.detail.body.id);\n\n  e.detail.target.el;  // Original entity (playerEl).\n  e.detail.body.el;    // Other entity, which playerEl touched.\n  e.detail.contact;    // Stats about the collision (CANNON.ContactEquation).\n  e.detail.contact.ni; // Normal (direction) of the collision (CANNON.Vec3).\n});\n```\n\nNote that CANNON.js cannot perfectly detect collisions with very fast-moving bodies. Doing so requires Continuous Collision Detection, which can be both slow and difficult to implement. If this is an issue for your scene, consider (1) slowing objects down, (2) detecting collisions manually (collisions with the floor are easy – `position.y - height / 2 <= 0`), or (3) attempting a PR to CANNON.js. See: [Collision with fast bodies](https://github.com/schteppe/cannon.js/issues/202).\n\n## Configuration\n\nContact materials define what happens when two objects meet, including physical properties such as friction and restitution (bounciness). The default, scene-wide contact materials may be configured on the scene element:\n\n```html\n<a-scene physics=\"friction: 0.1; restitution: 0.5\">\n  <!-- ... -->\n</a-scene>\n```\n\n| Property                        | Default | Description                                        |\n|---------------------------------|---------|----------------------------------------------------|\n| debug                           | true    | Whether to show wireframes for debugging.          |\n| gravity                         | -9.8    | Force of gravity (in m/s^2).                       |\n| iterations                      | 10      | The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations. |\n| maxInterval                     | 0.0667  | Maximum simulated time (in milliseconds) that may be taken by the physics engine per frame. Effectively prevents weird \"jumps\" when the player returns to the scene after a few minutes, at the expense of pausing physics during this time. |\n| friction                        | 0.01    | Coefficient of friction.                           |\n| restitution                     | 0.3     | Coefficient of restitution (bounciness).           |\n| contactEquationStiffness        | 1e8     | Stiffness of the produced contact equations.       |\n| contactEquationRelaxation       | 3       | Relaxation time of the produced contact equations. |\n| frictionEquationStiffness       | 1e8     | Stiffness of the produced friction equations.      |\n| frictionEquationRegularization  | 3       | Relaxation time of the produced friction equations |\n\nMore advanced configuration, including specifying different collision behaviors for different objects, is available through the CANNON.js JavaScript API.\n\nResources:\n\n* [CANNON.World](http://schteppe.github.io/cannon.js/docs/classes/World.html)\n* [CANNON.ContactMaterial](http://schteppe.github.io/cannon.js/docs/classes/ContactMaterial.html)\n\n","url":"https://unpkg.com/aframe-physics-system@^1.0.1/README.md"},"https://unpkg.com/aframe-layout-component@4.x.x/README.md":{"text":"## aframe-layout-component\n\nLayout component for [A-Frame](https://aframe.io).\n\n![Layout](https://cloud.githubusercontent.com/assets/674727/21413536/eb325152-c7ac-11e6-8f1b-3a5f4714dfbe.png)\n\nAutomatically positions child entities in 3D space, with several layouts to\nchoose from. Define the layout on the parent entity:\n\n```html\n<a-entity layout=\"type: line; margin: 2\">\n  <a-box></a-box>\n  <a-box></a-box>\n  <a-box></a-box>\n</a-entity>\n```\n\nAnd then the positions will automatically be calculated and set:\n\n```html\n<a-entity layout=\"type: line; margin: 2\">\n  <a-box position=\"0 0 0\"></a-box>\n  <a-box position=\"2 0 0\"></a-box>\n  <a-box position=\"4 0 0\"></a-box>\n</a-entity>\n```\n\nAs entities are added or removed, the layout component will trigger a reflow on\nthe positions.\n\nWe move then entire group around while maintaining the layout:\n\n```html\n<a-entity layout=\"type: line; margin: 2\" position=\"0 5 -5\">\n  <a-box position=\"0 0 0\"></a-box>\n  <a-box position=\"2 0 0\"></a-box>\n  <a-box position=\"4 0 0\"></a-box>\n</a-entity>\n```\n\n### Properties\n\n| Property  | Description                                                                               | Default Value |\n| --------- | -----------                                                                               | ------------- |\n| type      | Type of layout. Can be one of `box`, `circle`, `cube`, `dodecahedron`, `line`, `pyramid`. | `line`        |\n| column    | Number of columns (for type `box`).                                                       | 1             |\n| margin    | Margin in meters (for type `box`, `line`).                                                | 1             |\n| radius    | Radius in meters (for type `circle`, `cube`, `dodecahedron`, `pyramid`.                   | 1             |\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-layout-component/master/dist/aframe-layout-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-entity layout=\"type: circle; radius: 10\">\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n      <a-entity geometry=\"primitive: box\" material></a-entity>\n    </a-entity>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-layout-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-layout-component');\n```\n","url":"https://unpkg.com/aframe-layout-component@4.x.x/README.md"},"https://unpkg.com/aframe-stereo-component@0.2.x/README.md":{"text":"## aframe-stereo-component\n\nA stereo component for [A-Frame](https://aframe.io) VR.\n\nThis component builds on the ['layer' concept of THREE.js] (https://github.com/mrdoob/three.js/issues/6437) and is really two components in one:\n- **'stereocam' component**, with tells an aframe camera which 'eye' to render in case of monoscopic display (without 'Entering VR'). The camera will render all entities without the stereo component, but if it encounters an entity with the 'stereo' component active, it will render only those in the same eye as defined here.\n- **'stereo' component**, which tells aframe to include an entity in either the 'right' eye or 'left' eye (you can also specify 'both', but this has the same effect as not using the 'stereo' component. *The component also enables stereoscopic video rendering projected on spheres*, so if a sphere (see example below) has the 'stereo' component enabled, if will only project half of the video texture (which one depends on the 'eye' property), so the result is stereoscopic video rendering, if you include two spheres. The component expects videos in side-by-side equirectangular projection (see the video example below).\n\nIf a video is used in a sphere with the 'stereo' component active, **the component will also enable playback in mobile devices, by attaching a 'click' event on the rendering canvas**. Thus, in mobile devices you must click on the screen (via cardboard v2.0 button or with your finger) for the video to start playing.\n\nYou can see demos for both examples below [here] (http://oscarmarinmiro.github.io/aframe-stereo-component)\n\n### 'stereocam' component properties (only for camera)\n\n| Property | Description | Default Value |\n| -------- | ----------- | ------------- |\n| eye      |  which eye is enabled in monoscopic display ('left' or 'right')           | 'left               |\n\n### 'stereo' component properties (for other entities)\n| Property | Description | Default Value |\n| -------- | ----------- | ------------- |\n| eye      |  in which eye the entity is render VR mode ('left' or 'right')           | 'left               |\n| mode     | this property is for spheres holding a video texture. mode can be 'full' or 'half', depending if the original video is full 360 or only spans 180 degrees horizontally (half-dome)| 'full' |\n\n### Usage\n\n![\"Stereoscopic video\"](/video_stereo.png?raw=true \"Stereoscopic video\")\n\n#### Browser Installation. 360 stereoscopic video example\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<html>\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-stereo-component.js.min.js\"></script>\n</head>\n<body>\n    <a-scene>\n\n    <a-assets>\n\n<!--\n      stereoscopic panoramic render by\n      http://pedrofe.com/rendering-for-oculus-rift-with-arnold/\n      http://www.meryproject.com/\n -->\n      <!-- side by side equirectangular projected video -->\n      <video id=\"Mary\" src=\"examples/basic_development/textures/MaryOculus.webm\" loop></video>\n\n    </a-assets>\n\n      <!-- we tell here the camera to render (outside VR mode, in monoscopic mode) everything without the 'stereo' component active\n      and it it's active, only render those entities in the 'left' eye -->\n      \n      <a-camera position=\"0 0 10\" cursor-visible=\"false\" stereocam=\"eye:left;\"></a-camera>\n    \n      <!-- native sphere, will render on 'left' eye, and will take only the first half of the video for projection -->\n      \n      <a-entity geometry=\"primitive: sphere;\n                      radius: 100;\n                      segmentsWidth: 64;\n                      segmentsHeight: 64;\"\n              material=\"shader: flat; src: #Mary;\"\n              scale=\"-1 1 1\" stereo=\"eye:left\">\n      </a-entity>\n      \n      <!-- native sphere, will render on 'right' eye, and will take only the second half of the video for projection -->\n      \n      <a-entity geometry=\"primitive: sphere;\n                      radius: 100;\n                      segmentsWidth: 64;\n                      segmentsHeight: 64;\"\n              material=\"shader: flat; src: #Mary;\"\n              scale=\"-1 1 1\" stereo=\"eye:right\">\n      </a-entity>\n\n\n    </a-scene>\n\n </body>\n </html>\n\n\n```\n\n![\"Two cubes in a scene, each one for each eye\"](/cubes_stereo.png?raw=true \"Two cubes in a scene, each one for each eye\")\n\n#### Browser Installation. Two cubes, each one for each eye\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<html>\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/latest/aframe.min.js\"></script>\n  <script src=\"aframe-stereo-component.js.min.js\"></script>\n</head>\n<body>\n  <a-scene>\n      <a-sky color=\"#FFF\"></a-sky>\n      <a-light color=\"#333\" position=\"0 5 0\" type=\"ambient\" intensity=\"0.2\"></a-light>\n      <a-light type=\"point\" color=\"#EEE\" intensity=\"1.0\" position=\"3 3 10\"></a-light>\n      \n      <!-- 'left' eye entities will pass trough the camera in non-VR mode -->\n      \n      <a-camera position=\"0 0 10\" cursor-color=\"black\" stereocam=\"eye:left;\"></a-camera>\n\n      <!-- in VR mode, the first box is displayed only in the left eye, the second one in the right eye -->\n      \n      <a-entity geometry=\"primitive: box\" material=\"color: #C03546\" stereo=\"eye:left\"></a-entity>\n      <a-entity geometry=\"primitive: box\" material=\"color: #3546C0\" position=\"0 5 0\" stereo=\"eye: right\"></a-entity>\n      \n  </a-scene>\n\n </body>\n </html>\n\n\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-layer-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-layer-component');\n```\n\n#### Credits\n\nThe video used in the examples is from http://pedrofe.com/rendering-for-oculus-rift-with-arnold/, from the project http://www.meryproject.com/\n\nBoilerplate code from https://github.com/ngokevin/aframe-component-boilerplate\n\nCode for adjusting sphere face vertex is from https://github.com/mrdoob/three.js/blob/master/examples/webvr_video.html\n","url":"https://unpkg.com/aframe-stereo-component@0.2.x/README.md"},"https://unpkg.com/aframe-text-component@0.4.x/package.json":{"name":"aframe-text-component","version":"0.4.0","description":"Geometry-based text in A-Frame","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8008 --live --open","dist":"webpack index.js dist/aframe-text-component.js && webpack -p index.js dist/aframe-text-component.min.js","postpublish":"npm run dist","test":"karma start ./tests/karma.conf.js"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/kframe.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/kframe/issues"},"homepage":"https://github.com/ngokevin/kframe/tree/components/text#readme","devDependencies":{"aframe":"aframevr/aframe#master","browserify":"^12.0.1","budo":"^8.1.0","chai":"^3.4.1","chai-shallow-deep-equal":"^1.3.0","karma":"^0.13.15","karma-browserify":"^4.4.2","karma-chai-shallow-deep-equal":"0.0.4","karma-firefox-launcher":"^0.1.7","karma-mocha":"^0.2.1","karma-mocha-reporter":"^1.1.3","karma-sinon-chai":"^1.1.0","mocha":"^2.3.4","watchify":"^3.6.1","webpack":"^1.12.9"}},"https://unpkg.com/aframe-mountain-component@0.3.x/package.json":{"name":"aframe-mountain-component","version":"0.3.2","description":"Mountain terrain in A-Frame using randomly-generated height maps","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8008 --live --open","dist":"webpack index.js dist/aframe-mountain-component.js && webpack -p index.js dist/aframe-mountain-component.min.js","postpublish":"npm run dist"},"repository":{"type":"git","url":"git+https://github.com/ngokevin/kframe.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Kevin Ngo <me@ngokevin.com>","license":"MIT","bugs":{"url":"https://github.com/ngokevin/kframe/issues"},"homepage":"https://github.com/ngokevin/kframe/tree/components/mountain#readme","devDependencies":{"aframe":"^0.3.1","browserify":"^12.0.1","budo":"^8.1.0","webpack":"^1.12.9"}},"https://unpkg.com/aframe-text-component@0.4.x/README.md":{"text":"## aframe-text-component\n\nA text geometry component for [A-Frame](https://aframe.io). The text geometry\ncomponent wraps\n[THREE.TextGeometry](https://threejs.org/docs/?q=textge#Reference/Geometries/TextGeometry).\n\n![screenshot](https://cloud.githubusercontent.com/assets/674727/21373560/c4c7507c-c6d4-11e6-86a5-88cb3ae8d0cb.png)\n\n## Properties\n\n| Property       | Description                                                   | Default Value                                                                                  |\n| --------       | -----------                                                   | -------------                                                                                  |\n| bevelEnabled   |                                                               | false                                                                                          |\n| bevelSize      |                                                               | 8                                                                                              |\n| bevelThickness |                                                               | 12                                                                                             |\n| curveSegments  |                                                               | 12                                                                                             |\n| font           | Path to a typeface.json file or selector to `<a-asset-item>`. | https://rawgit.com/ngokevin/kframe/master/components/text/lib/helvetiker_regular.typeface.json |\n| height         |                                                               | 0.05                                                                                           |\n| size           |                                                               | 0.5                                                                                            |\n| style          |                                                               | normal                                                                                         |\n| text           |                                                               | None                                                                                           |\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.4.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/aframe-text-component/master/dist/aframe-text-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-assets>\n      <a-asset-item id=\"optimerBoldFont\" src=\"https://rawgit.com/mrdoob/three.js/dev/examples/fonts/optimer_bold.typeface.json\"></a-asset-item>\n    </a-assets>\n\n    <a-entity text=\"text: What's up\"></a-entity>\n    <a-entity text=\"text: Dog?; font: #optimerBoldFont\"></a-entity>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-text-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-text-component');\n```\n\n## Using Different Fonts\n\nThe text component uses `typeface.json` files, which are Web Fonts converted to\nJSON for three.js.  Typeface fonts can be generated from fonts using this\n[typeface font generator](http://gero3.github.io/facetype.js/). You can also\nfind some sample generated fonts in the `examples/fonts` directory in the\n[three.js repository](https://github.com/mrdoob/three.js).\n\nBy default, the text geometry component points to Helvetiker (Regular). Each\nfont is fairly large, from at least 60KB to hundreds of KBs.\n\nTo include a font for use with the text component, it is recommended to define\nit in `<a-asset-item>` and point to the font with a selector.\n\nFor example in HTML:\n\n```html\n<html>\n  <head>\n    <title>My A-Frame Scene</title>\n    <script src=\"https://aframe.io/releases/0.2.0/aframe.min.js\"></script>\n    <script src=\"https://rawgit.com/ngokevin/aframe-text-component/master/dist/aframe-text-component.min.js\"></script>\n    <script src=\"myfont.typeface.js\"></script>\n  </head>\n  <body>\n    <a-scene>\n      <a-assets>\n        <a-asset-item id=\"optimerBoldFont\" src=\"https://rawgit.com/mrdoob/three.js/dev/examples/fonts/optimer_bold.typeface.json\"></a-asset-item>\n        <a-mixin id=\"boldFont\" text=\"font: #optimerBoldFont\"></a-mixin>\n      </a-assets>\n\n      <a-entity mixin=\"boldFont\" text=\"text: What's up\"></a-entity>\n      <a-entity text=\"text: Dog?; font: #optimerBoldFont\"></a-entity>\n    </a-scene>\n  </body>\n</html>\n```\n\nOr in JS, we can bundle and set a font directly with `setAttribute` such that\nwe don't have to XHR the font file separately at runtime:\n\n```js\nrequire('aframe');\nrequire('aframe-text-component');\n\nvar fontJson = require('./fonts/myfont.typeface.json');\nvar el = document.createElement('a-entity');\nel.setAttribute('text', {font: fontJson});\n```\n\n## Applying a Material\n\nThe text geometry component defines just the geometry. We can apply any\nthree.js material to the geometry:\n\n```html\n<a-entity text=\"text: HELLO\" material=\"color: red; src: #texture\"></a-entity>\n```\n\nSee the [Vaporwave\nExample](https://ngokevin.github.io/kframe/components/text/examples/vaporwave/)\nby [Ada Rose Edwards](https://twitter.com/lady_ada_king) for an example on applying\nmaterials.\n","url":"https://unpkg.com/aframe-text-component@0.4.x/README.md"},"https://unpkg.com/aframe-mountain-component@0.3.x/README.md":{"text":"## aframe-mountain-component\n\nMountain component and primitive for A-Frame.\n\n![Screenshot](https://cloud.githubusercontent.com/assets/674727/18611595/c98bc48e-7cf2-11e6-8e2a-2110fbfe0ff0.png)\n\nUses Perlin noise to create a height map, create a shaded texture from that\nheight map using a `<canvas>`, and using the height map to create vertices on a\nBufferGeometry.\n\n## Properties\n\n| Property    | Description                     | Default Value    |\n| --------    | -----------                     | -------------    |\n| color       | Base color of mountain.         | rgb(92, 32, 0)   |\n| shadowColor | Diffuse color of mountain.      | rgb(128, 96, 96) |\n| sunPosition | Sun position to shade mountain. | 1, 1, 1          |\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/ngokevin/kframe/tree/master/components/mountain/dist/aframe-mountain-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-mountain color=\"red\"></a-mountain>\n    <!-- <a-entity mountain=\"color: red\"></a-entity> -->\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-mountain-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-mountain-component');\n```\n","url":"https://unpkg.com/aframe-mountain-component@0.3.x/README.md"},"https://unpkg.com/aframe-alongpath-component@^0.2.0/package.json":{"name":"aframe-alongpath-component","version":"0.2.2","description":"A-Frame Component that allows entities to follow predefined paths","main":"index.js","directories":{"example":"examples"},"scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-alongpath-component.js && webpack -p index.js dist/aframe-alongpath-component.min.js","lint":"semistandard -v | snazzy","postpublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","start":"npm run dev"},"repository":{"type":"git","url":"git+https://github.com/protyze/aframe-alongpath-component.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"protyze <jan.azzati@gmail.com>","license":"GPL-3.0","bugs":{"url":"https://github.com/protyze/aframe-alongpath-component/issues"},"homepage":"https://github.com/protyze/aframe-alongpath-component#readme","dependencies":{"aframe":"^0.3.1"},"devDependencies":{"browserify":"^12.0.1","browserify-css":"^0.8.3","budo":"^7.1.0","webpack":"^1.12.9","ghpages":"0.0.3","shx":"^0.1.1","snazzy":"^4.0.0","semistandard":"^8.0.0","shelljs":"^0.7.0","inquirer":"^1.0.2"},"semistandard":{"ignore":["examples/build.js","dist/**"]}},"https://unpkg.com/aframe-physics-system@^1.2.x/package.json":{"name":"aframe-physics-system","version":"1.2.0","description":"Physics system for A-Frame VR, built on Cannon.js","main":"index.js","scripts":{"dev":"budo browser.js:bundle.js -d examples --port 8000","dist":"browserify browser.js -o dist/aframe-physics-system.js && uglifyjs -c -o dist/aframe-physics-system.min.js -- dist/aframe-physics-system.js","test":"karma start ./tests/karma.conf.js","test:once":"karma start ./tests/karma.conf.js --single-run","test:firefox":"karma start ./tests/karma.conf.js --browsers Firefox","test:chrome":"karma start ./tests/karma.conf.js --browsers Chrome","test:ci":"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run --browsers Firefox","preversion":"npm run test:once","preversion:readme":"replace 'aframe-physics-system/v\\d+\\.\\d+\\.\\d+' \"aframe-physics-system/v$npm_package_version\" ./README.md","version":"npm run preversion:readme && npm run dist && git add -A dist README.md","postversion":"git push && git push --tags && npm publish"},"repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-physics-system.git"},"keywords":["aframe","aframevr","vr","three","physics","cannon","webgl","webvr"],"author":"Don McCurdy <dm@donmccurdy.com> (https://www.donmccurdy.com)","license":"MIT","bugs":{"url":"https://github.com/donmccurdy/aframe-physics-system/issues"},"homepage":"https://github.com/donmccurdy/aframe-physics-system#readme","dependencies":{"cannon":"github:donmccurdy/cannon.js#v0.6.2-dev1","three-to-cannon":"^1.0.2"},"peerDependencies":{"aframe":"^0.4.0"},"devDependencies":{"aframe":"^0.4.0","browserify":"^13.1.0","budo":"^9.2.1","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.4","envify":"^4.0.0","karma":"^1.3.0","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.2.0","karma-mocha-reporter":"^2.2.0","karma-sinon-chai":"^1.2.4","mocha":"^3.1.2","replace":"^0.3.0","sinon":"^1.17.6","sinon-chai":"^2.8.0","uglify-js":"^2.7.3"}},"https://unpkg.com/aframe-physics-system@^1.0.x/package.json":{"name":"aframe-physics-system","version":"1.2.0","description":"Physics system for A-Frame VR, built on Cannon.js","main":"index.js","scripts":{"dev":"budo browser.js:bundle.js -d examples --port 8000","dist":"browserify browser.js -o dist/aframe-physics-system.js && uglifyjs -c -o dist/aframe-physics-system.min.js -- dist/aframe-physics-system.js","test":"karma start ./tests/karma.conf.js","test:once":"karma start ./tests/karma.conf.js --single-run","test:firefox":"karma start ./tests/karma.conf.js --browsers Firefox","test:chrome":"karma start ./tests/karma.conf.js --browsers Chrome","test:ci":"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run --browsers Firefox","preversion":"npm run test:once","preversion:readme":"replace 'aframe-physics-system/v\\d+\\.\\d+\\.\\d+' \"aframe-physics-system/v$npm_package_version\" ./README.md","version":"npm run preversion:readme && npm run dist && git add -A dist README.md","postversion":"git push && git push --tags && npm publish"},"repository":{"type":"git","url":"git+https://github.com/donmccurdy/aframe-physics-system.git"},"keywords":["aframe","aframevr","vr","three","physics","cannon","webgl","webvr"],"author":"Don McCurdy <dm@donmccurdy.com> (https://www.donmccurdy.com)","license":"MIT","bugs":{"url":"https://github.com/donmccurdy/aframe-physics-system/issues"},"homepage":"https://github.com/donmccurdy/aframe-physics-system#readme","dependencies":{"cannon":"github:donmccurdy/cannon.js#v0.6.2-dev1","three-to-cannon":"^1.0.2"},"peerDependencies":{"aframe":"^0.4.0"},"devDependencies":{"aframe":"^0.4.0","browserify":"^13.1.0","budo":"^9.2.1","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.4","envify":"^4.0.0","karma":"^1.3.0","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.2.0","karma-mocha-reporter":"^2.2.0","karma-sinon-chai":"^1.2.4","mocha":"^3.1.2","replace":"^0.3.0","sinon":"^1.17.6","sinon-chai":"^2.8.0","uglify-js":"^2.7.3"}},"https://unpkg.com/aframe-stats-in-vr-component@0.1.x/package.json":{"name":"aframe-stats-in-vr-component","version":"0.1.3","description":"stats-in-vr component for A-Frame.","main":"index.js","scripts":{"build":"browserify examples/main.js -o examples/build.js","dev":"budo examples/main.js:build.js --dir examples --port 8000 --live --open","dist":"webpack index.js dist/aframe-stats-in-vr-component.js && webpack -p index.js dist/aframe-stats-in-vr-component.min.js","lint":"semistandard -v | snazzy","prepublish":"npm run dist","preghpages":"npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages","ghpages":"npm run preghpages && ghpages -p gh-pages","start":"npm run dev","test":"karma start ./tests/karma.conf.js","test:docs":"node scripts/docs-lint.js","test:firefox":"karma start ./tests/karma.conf.js --browsers Firefox","test:chrome":"karma start ./tests/karma.conf.js --browsers Chrome","test:ci":"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run --browsers Firefox","unboil":"node scripts/unboil.js"},"repository":{"type":"git","url":"git+https://github.com/chenzlabs/stats-in-vr.git"},"keywords":["aframe","aframe-component","aframe-vr","vr","mozvr","webvr"],"author":"Michael Chen <machenmusik@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/chenzlabs/stats-in-vr/issues"},"homepage":"https://github.com/chenzlabs/stats-in-vr#readme","devDependencies":{"aframe":"^0.4.0","browserify":"^13.0.0","browserify-css":"^0.9.1","budo":"^8.2.2","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.0","envify":"^3.4.1","ghpages":"^0.0.8","inquirer":"^1.0.2","karma":"^1.3.0","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.1.1","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.1.1","karma-mocha-reporter":"^2.1.0","karma-sinon-chai":"^1.2.4","mocha":"^3.0.2","randomcolor":"^0.4.4","semistandard":"^8.0.0","shelljs":"^0.7.0","shx":"^0.1.1","sinon":"^1.17.5","sinon-chai":"^2.8.0","snazzy":"^4.0.0","webpack":"^1.13.0"},"semistandard":{"ignore":["examples/build.js","dist/**"]}},"https://unpkg.com/aframe-alongpath-component@^0.2.0/README.md":{"text":"## aframe-alongpath-component\nA component for [A-Frame](https://aframe.io) that allows entities to follow predefined paths.\n\nThanks to https://jsbin.com/dasefeh/edit?html,output for the basic concept.\n\n![](http://lab.immersiveweb.ch/assets/aframe-alongpath-component.gif)\n\n### Properties\n\n| Property | Description                                                                          | Default Value |\n| -------- | -----------                                                                          | ------------- |\n| path     | One or more point on the path the entity should follow (Format: \"x,y,z x,y,z x,y,z\") | ''            |\n| closed   | Whether or not the path should be closed automatically                               | false         |\n| dur      | Duration in milliseconds for the object to follow the entire path                    | 1000          |\n| delay    | Number of milliseconds to wait for the animation to begin                            | 2000          |\n| loop     | Whether or not the animation should loop                                             | false         |\n| inspect  | Whether or not the animation path should be visible and editable in A-Frame Inspector| false         |\n\n### Usage with A-Frame Inspector\n\nYou can use the [A-Frame Inspector](https://github.com/aframevr/aframe-inspector) to manually modify the predefined paths. To do so, you can open the Inspector as usual, then set the \"inspector\" Property to true. This will cause the path to be displayed visually as a line while the predefined path-points (received from the \"path\"-Property) are showed as a small box. You can now change the path in the inspector by selecting one of the boxes and changing its position using the transformation tools of the editor. The path will change instantly.\n\n![](http://lab.immersiveweb.ch/assets/aframe-alongpath-component-inspector.gif)\n\n### Usage\n\n#### Browser Installation\n\nInstall and use by directly including the [browser files](dist):\n\n```html\n<head>\n  <title>My A-Frame Scene</title>\n  <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n  <script src=\"https://rawgit.com/protyze/aframe-alongpath-component/master/dist/aframe-alongpath-component.min.js\"></script>\n</head>\n\n<body>\n  <a-scene>\n    <a-sphere color=\"red\" radius=\"0.25\" position=\"0 0 0\"\n              alongpath=\"path:2,2,-5 -2,1,-2.5 0,1,-1; closed:false; dur:5000; delay:4000; inspector:false;\">\n    </a-sphere>\n  </a-scene>\n</body>\n```\n\n#### NPM Installation\n\nInstall via NPM:\n\n```bash\nnpm install aframe-alongpath-component\n```\n\nThen register and use.\n\n```js\nrequire('aframe');\nrequire('aframe-alongpath-component');\n```","url":"https://unpkg.com/aframe-alongpath-component@^0.2.0/README.md"},"https://unpkg.com/aframe-physics-system@^1.2.x/README.md":{"text":"# Physics for A-Frame VR\n\n[![Build Status](https://travis-ci.org/donmccurdy/aframe-physics-system.svg?branch=master)](https://travis-ci.org/donmccurdy/aframe-physics-system)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/donmccurdy/aframe-physics-system/master/LICENSE)\n\nComponents for A-Frame physics integration, built on [CANNON.js](http://schteppe.github.io/cannon.js/).\n\n![d6590832-8bdb-11e6-9336-658b00bc0460 3](https://cloud.githubusercontent.com/assets/1848368/19297499/806d059a-9013-11e6-9b20-c03294acbc4c.png)\n\n> Image credit [@andgokevin](https://twitter.com/andgokevin).\n\n## Usage (Scripts)\n\nIn the [dist/](https://github.com/donmccurdy/aframe-physics-system/tree/master/dist) folder, download the full or minified build. Include the script on your page, and all components are automatically registered for you:\n\n```html\n<script src=\"//cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.min.js\"></script>\n```\n\nCDN builds for aframe-physics-system/v1.2.0:\n\n- [aframe-physics-system.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.js) *(development)*\n- [aframe-physics-system.min.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.min.js) *(production)*\n\n## Usage (NPM)\n\n```\nnpm install --save aframe-physics-system\n```\n\n```javascript\n// my-app.js\nvar physics = require('aframe-physics-system');\nphysics.registerAll();\n```\n\nOnce installed, you'll need to compile your JavaScript using something like [Browserify](http://browserify.org/) or [Webpack](http://webpack.github.io/). Example:\n\n```bash\nnpm install -g browserify\nbrowserify my-app.js -o bundle.js\n```\n\n`bundle.js` may then be included in your page. See [here](http://browserify.org/#middle-section) for a better introduction to Browserify.\n\n## Components – `dynamic-body` and `static-body`\n\nThe `dynamic-body` and `static-body` components may be added to any `<a-entity/>` that contains a mesh. Generally, each scene will have at least one `static-body` for the ground, and one or more `dynamic-body` instances that the player can interact with.\n\n- **dynamic-body**: A freely-moving object. Dynamic bodies have mass, collide with other objects, bounce or slow during collisions, and fall if gravity is enabled.\n- **static-body**: A fixed-position or animated object. Other objects may collide with static bodies, but static bodies themselves are unaffected by gravity and collisions.\n\n| Property       | Dependencies     | Default | Description                                 |\n|----------------|------------------|---------|---------------------------------------------|\n| shape          | —                | `auto`  | `auto`, `box`, `cylinder`, `sphere`, `hull` |\n| mass           | `dynamic-body`   | 5       | Simulated mass of the object, > 0.          |\n| linearDamping  | `dynamic-body`   | 0.01    | Resistance to movement.                     |\n| angularDamping | `dynamic-body`   | 0.01    | Resistance to rotation.                     |\n| sphereRadius   |  `shape:sphere`  | —       | Override default radius of bounding sphere. |\n| cylinderAxis   | `shape:cylinder` | —       | Override default axis of bounding cylinder. |\n\n### Basics\n\n```html\n<!-- The debug:true option creates a wireframe around each physics body. If you don't see a wireframe,\n     the physics system may be unable to parse your model without a shape:box or shape:hull option. -->\n<a-scene physics=\"debug: true\">\n\n  <!-- Camera -->\n  <a-entity camera look-controls></a-entity>\n\n  <!-- Floor -->\n  <a-plane static-body></a-plane>\n\n  <!-- Immovable box -->\n  <a-box static-body position=\"0 0.5 -5\" width=\"3\" height=\"1\" depth=\"1\"></a-box>\n\n  <!-- Dynamic box -->\n  <a-box dynamic-body position=\"5 0.5 0\" width=\"1\" height=\"1\" depth=\"1\"></a-box>\n\n</a-scene>\n```\n\n## Components – `constraint`\n\nThe `constraint` component is used to bind physics bodies together using hinges, fixed distances, or fixed attachment points.\n\nExample:\n\n```html\n<a-box id=\"other-box\" dynamic-body />\n<a-box constraint=\"target: #other-box;\" dynamic-body /> \n```\n\n| Property         | Dependencies    | Default | Description |\n| --- | --- | --- | --- |\n| type             | —               | `lock`  | Type of constraint. Options: `lock`, `distance`, and more to come. |\n| target           | —               | —       | Selector for a single entity to which current entity should be bound. |\n| maxForce         | —               | 1e6     | Maximum force that may be exerted to enforce this constraint. |\n| collideConnected | —               | true    | If true, connected bodies may collide with one another. |\n| wakeUpBodies     | —               | true    | If true, sleeping bodies are woken up by this constraint. |\n| distance         | `type:distance` | auto    | Distance at which bodies should be fixed. Default, or 0, for current distance. |\n\n## Using the CANNON.js API\n\nFor more advanced physics, use the CANNON.js API with custom JavaScript and A-Frame components. The [CANNON.js documentation](http://schteppe.github.io/cannon.js/docs/) and source code offer good resources for learning to work with physics in JavaScript.\n\nIn A-Frame, each entity's `CANNON.Body` instance is exposed on the `el.body` property. To apply a quick push to an object, you might do the following:\n\n```html\n<a-scene>\n  <a-entity id=\"nyan\" dynamic-body=\"shape: hull\" obj-model=\"obj: url(nyan-cat.obj)\"></a-entity>\n  <a-plane static-body></a-plane>\n</a-scene>\n```\n\n```javascript\nvar el = sceneEl.querySelector('#nyan');\nel.body.applyImpulse(\n  /* impulse */        new CANNON.Vec3(0, 1, -1),\n  /* world position */ new CANNON.Vec3().copy(el.getComputedAttribute('position'))\n);\n```\n\n## Body Shapes\n\nBody components will attempt to find an appropriate CANNON.js shape to fit your model. When defining an object you may choose a shape or leave the default, `auto`. Select a shape carefully, as there are performance implications with different choices:\n\n* **Auto** (`auto`) – Chooses automatically from the available shapes.\n* **Box** (`box`) – Great performance, compared to Hull or Trimesh shapes, and may be fitted to custom models.\n* **Cylinder** (`cylinder`) – See `box`. Adds `cylinderAxis` option.\n* **Sphere** (`sphere`) – See `box`. Adds `sphereRadius` option.\n* **Convex** (`hull`) – Wraps a model like shrink-wrap. Convex shapes are more performant and better supported than Trimesh, but may still have some performance impact when used as dynamic objects.\n* **Primitives** – Plane/Cylinder/Sphere. Used automatically with the corresponding A-Frame primitives.\n* **Trimesh** – *Deprecated.* Not available as a custom shape, but may be chosen as a last resort for custom geometry. Trimeshes adapt to fit custom geometry (e.g. a `.OBJ` or `.DAE` file), but have very minimal support. Arbitrary trimesh shapes are difficult to model in any JS physics engine, will \"fall through\" certain other shapes, and have serious performance limitations.\n* **Compound** – *In progress.* Compound shapes require a bit of work to set up, but allow you to use multiple primitives to define a physics shape around custom models. These will generally perform better, and behave more accurately, than Trimesh or Convex shapes. For example, a stool might be modeled as a cylinder-shaped seat, on four long cylindrical legs.\n\nFor more details, see the CANNON.js [collision matrix](https://github.com/schteppe/cannon.js#features).\n\nExample using a bounding box for a custom model:\n\n```html\n<!-- Box -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: box; mass: 2\"></a-entity>\n\n<!-- Cylinder -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: cylinder; cylinderAxis: y; mass: 5\"></a-entity>\n```\n\n## Collision Events\n\nCANNON.js generates events when a collision is detected, which are propagated onto the associated A-Frame entity. Example:\n\n```javascript\nvar playerEl = document.querySelector('[camera]');\nplayerEl.addEventListener('collide', function (e) {\n  console.log('Player has collided with body #' + e.detail.body.id);\n\n  e.detail.target.el;  // Original entity (playerEl).\n  e.detail.body.el;    // Other entity, which playerEl touched.\n  e.detail.contact;    // Stats about the collision (CANNON.ContactEquation).\n  e.detail.contact.ni; // Normal (direction) of the collision (CANNON.Vec3).\n});\n```\n\nNote that CANNON.js cannot perfectly detect collisions with very fast-moving bodies. Doing so requires Continuous Collision Detection, which can be both slow and difficult to implement. If this is an issue for your scene, consider (1) slowing objects down, (2) detecting collisions manually (collisions with the floor are easy – `position.y - height / 2 <= 0`), or (3) attempting a PR to CANNON.js. See: [Collision with fast bodies](https://github.com/schteppe/cannon.js/issues/202).\n\n## Configuration\n\nContact materials define what happens when two objects meet, including physical properties such as friction and restitution (bounciness). The default, scene-wide contact materials may be configured on the scene element:\n\n```html\n<a-scene physics=\"friction: 0.1; restitution: 0.5\">\n  <!-- ... -->\n</a-scene>\n```\n\n| Property                        | Default | Description                                        |\n|---------------------------------|---------|----------------------------------------------------|\n| debug                           | true    | Whether to show wireframes for debugging.          |\n| gravity                         | -9.8    | Force of gravity (in m/s^2).                       |\n| iterations                      | 10      | The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations. |\n| maxInterval                     | 0.0667  | Maximum simulated time (in milliseconds) that may be taken by the physics engine per frame. Effectively prevents weird \"jumps\" when the player returns to the scene after a few minutes, at the expense of pausing physics during this time. |\n| friction                        | 0.01    | Coefficient of friction.                           |\n| restitution                     | 0.3     | Coefficient of restitution (bounciness).           |\n| contactEquationStiffness        | 1e8     | Stiffness of the produced contact equations.       |\n| contactEquationRelaxation       | 3       | Relaxation time of the produced contact equations. |\n| frictionEquationStiffness       | 1e8     | Stiffness of the produced friction equations.      |\n| frictionEquationRegularization  | 3       | Relaxation time of the produced friction equations |\n\nMore advanced configuration, including specifying different collision behaviors for different objects, is available through the CANNON.js JavaScript API.\n\nResources:\n\n* [CANNON.World](http://schteppe.github.io/cannon.js/docs/classes/World.html)\n* [CANNON.ContactMaterial](http://schteppe.github.io/cannon.js/docs/classes/ContactMaterial.html)\n\n","url":"https://unpkg.com/aframe-physics-system@^1.2.x/README.md"},"https://unpkg.com/aframe-physics-system@^1.0.x/README.md":{"text":"# Physics for A-Frame VR\n\n[![Build Status](https://travis-ci.org/donmccurdy/aframe-physics-system.svg?branch=master)](https://travis-ci.org/donmccurdy/aframe-physics-system)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/donmccurdy/aframe-physics-system/master/LICENSE)\n\nComponents for A-Frame physics integration, built on [CANNON.js](http://schteppe.github.io/cannon.js/).\n\n![d6590832-8bdb-11e6-9336-658b00bc0460 3](https://cloud.githubusercontent.com/assets/1848368/19297499/806d059a-9013-11e6-9b20-c03294acbc4c.png)\n\n> Image credit [@andgokevin](https://twitter.com/andgokevin).\n\n## Usage (Scripts)\n\nIn the [dist/](https://github.com/donmccurdy/aframe-physics-system/tree/master/dist) folder, download the full or minified build. Include the script on your page, and all components are automatically registered for you:\n\n```html\n<script src=\"//cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.min.js\"></script>\n```\n\nCDN builds for aframe-physics-system/v1.2.0:\n\n- [aframe-physics-system.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.js) *(development)*\n- [aframe-physics-system.min.js](https://cdn.rawgit.com/donmccurdy/aframe-physics-system/v1.2.0/dist/aframe-physics-system.min.js) *(production)*\n\n## Usage (NPM)\n\n```\nnpm install --save aframe-physics-system\n```\n\n```javascript\n// my-app.js\nvar physics = require('aframe-physics-system');\nphysics.registerAll();\n```\n\nOnce installed, you'll need to compile your JavaScript using something like [Browserify](http://browserify.org/) or [Webpack](http://webpack.github.io/). Example:\n\n```bash\nnpm install -g browserify\nbrowserify my-app.js -o bundle.js\n```\n\n`bundle.js` may then be included in your page. See [here](http://browserify.org/#middle-section) for a better introduction to Browserify.\n\n## Components – `dynamic-body` and `static-body`\n\nThe `dynamic-body` and `static-body` components may be added to any `<a-entity/>` that contains a mesh. Generally, each scene will have at least one `static-body` for the ground, and one or more `dynamic-body` instances that the player can interact with.\n\n- **dynamic-body**: A freely-moving object. Dynamic bodies have mass, collide with other objects, bounce or slow during collisions, and fall if gravity is enabled.\n- **static-body**: A fixed-position or animated object. Other objects may collide with static bodies, but static bodies themselves are unaffected by gravity and collisions.\n\n| Property       | Dependencies     | Default | Description                                 |\n|----------------|------------------|---------|---------------------------------------------|\n| shape          | —                | `auto`  | `auto`, `box`, `cylinder`, `sphere`, `hull` |\n| mass           | `dynamic-body`   | 5       | Simulated mass of the object, > 0.          |\n| linearDamping  | `dynamic-body`   | 0.01    | Resistance to movement.                     |\n| angularDamping | `dynamic-body`   | 0.01    | Resistance to rotation.                     |\n| sphereRadius   |  `shape:sphere`  | —       | Override default radius of bounding sphere. |\n| cylinderAxis   | `shape:cylinder` | —       | Override default axis of bounding cylinder. |\n\n### Basics\n\n```html\n<!-- The debug:true option creates a wireframe around each physics body. If you don't see a wireframe,\n     the physics system may be unable to parse your model without a shape:box or shape:hull option. -->\n<a-scene physics=\"debug: true\">\n\n  <!-- Camera -->\n  <a-entity camera look-controls></a-entity>\n\n  <!-- Floor -->\n  <a-plane static-body></a-plane>\n\n  <!-- Immovable box -->\n  <a-box static-body position=\"0 0.5 -5\" width=\"3\" height=\"1\" depth=\"1\"></a-box>\n\n  <!-- Dynamic box -->\n  <a-box dynamic-body position=\"5 0.5 0\" width=\"1\" height=\"1\" depth=\"1\"></a-box>\n\n</a-scene>\n```\n\n## Components – `constraint`\n\nThe `constraint` component is used to bind physics bodies together using hinges, fixed distances, or fixed attachment points.\n\nExample:\n\n```html\n<a-box id=\"other-box\" dynamic-body />\n<a-box constraint=\"target: #other-box;\" dynamic-body /> \n```\n\n| Property         | Dependencies    | Default | Description |\n| --- | --- | --- | --- |\n| type             | —               | `lock`  | Type of constraint. Options: `lock`, `distance`, and more to come. |\n| target           | —               | —       | Selector for a single entity to which current entity should be bound. |\n| maxForce         | —               | 1e6     | Maximum force that may be exerted to enforce this constraint. |\n| collideConnected | —               | true    | If true, connected bodies may collide with one another. |\n| wakeUpBodies     | —               | true    | If true, sleeping bodies are woken up by this constraint. |\n| distance         | `type:distance` | auto    | Distance at which bodies should be fixed. Default, or 0, for current distance. |\n\n## Using the CANNON.js API\n\nFor more advanced physics, use the CANNON.js API with custom JavaScript and A-Frame components. The [CANNON.js documentation](http://schteppe.github.io/cannon.js/docs/) and source code offer good resources for learning to work with physics in JavaScript.\n\nIn A-Frame, each entity's `CANNON.Body` instance is exposed on the `el.body` property. To apply a quick push to an object, you might do the following:\n\n```html\n<a-scene>\n  <a-entity id=\"nyan\" dynamic-body=\"shape: hull\" obj-model=\"obj: url(nyan-cat.obj)\"></a-entity>\n  <a-plane static-body></a-plane>\n</a-scene>\n```\n\n```javascript\nvar el = sceneEl.querySelector('#nyan');\nel.body.applyImpulse(\n  /* impulse */        new CANNON.Vec3(0, 1, -1),\n  /* world position */ new CANNON.Vec3().copy(el.getComputedAttribute('position'))\n);\n```\n\n## Body Shapes\n\nBody components will attempt to find an appropriate CANNON.js shape to fit your model. When defining an object you may choose a shape or leave the default, `auto`. Select a shape carefully, as there are performance implications with different choices:\n\n* **Auto** (`auto`) – Chooses automatically from the available shapes.\n* **Box** (`box`) – Great performance, compared to Hull or Trimesh shapes, and may be fitted to custom models.\n* **Cylinder** (`cylinder`) – See `box`. Adds `cylinderAxis` option.\n* **Sphere** (`sphere`) – See `box`. Adds `sphereRadius` option.\n* **Convex** (`hull`) – Wraps a model like shrink-wrap. Convex shapes are more performant and better supported than Trimesh, but may still have some performance impact when used as dynamic objects.\n* **Primitives** – Plane/Cylinder/Sphere. Used automatically with the corresponding A-Frame primitives.\n* **Trimesh** – *Deprecated.* Not available as a custom shape, but may be chosen as a last resort for custom geometry. Trimeshes adapt to fit custom geometry (e.g. a `.OBJ` or `.DAE` file), but have very minimal support. Arbitrary trimesh shapes are difficult to model in any JS physics engine, will \"fall through\" certain other shapes, and have serious performance limitations.\n* **Compound** – *In progress.* Compound shapes require a bit of work to set up, but allow you to use multiple primitives to define a physics shape around custom models. These will generally perform better, and behave more accurately, than Trimesh or Convex shapes. For example, a stool might be modeled as a cylinder-shaped seat, on four long cylindrical legs.\n\nFor more details, see the CANNON.js [collision matrix](https://github.com/schteppe/cannon.js#features).\n\nExample using a bounding box for a custom model:\n\n```html\n<!-- Box -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: box; mass: 2\"></a-entity>\n\n<!-- Cylinder -->\n<a-entity obj-model=\"obj: url(...)\" dynamic-body=\"shape: cylinder; cylinderAxis: y; mass: 5\"></a-entity>\n```\n\n## Collision Events\n\nCANNON.js generates events when a collision is detected, which are propagated onto the associated A-Frame entity. Example:\n\n```javascript\nvar playerEl = document.querySelector('[camera]');\nplayerEl.addEventListener('collide', function (e) {\n  console.log('Player has collided with body #' + e.detail.body.id);\n\n  e.detail.target.el;  // Original entity (playerEl).\n  e.detail.body.el;    // Other entity, which playerEl touched.\n  e.detail.contact;    // Stats about the collision (CANNON.ContactEquation).\n  e.detail.contact.ni; // Normal (direction) of the collision (CANNON.Vec3).\n});\n```\n\nNote that CANNON.js cannot perfectly detect collisions with very fast-moving bodies. Doing so requires Continuous Collision Detection, which can be both slow and difficult to implement. If this is an issue for your scene, consider (1) slowing objects down, (2) detecting collisions manually (collisions with the floor are easy – `position.y - height / 2 <= 0`), or (3) attempting a PR to CANNON.js. See: [Collision with fast bodies](https://github.com/schteppe/cannon.js/issues/202).\n\n## Configuration\n\nContact materials define what happens when two objects meet, including physical properties such as friction and restitution (bounciness). The default, scene-wide contact materials may be configured on the scene element:\n\n```html\n<a-scene physics=\"friction: 0.1; restitution: 0.5\">\n  <!-- ... -->\n</a-scene>\n```\n\n| Property                        | Default | Description                                        |\n|---------------------------------|---------|----------------------------------------------------|\n| debug                           | true    | Whether to show wireframes for debugging.          |\n| gravity                         | -9.8    | Force of gravity (in m/s^2).                       |\n| iterations                      | 10      | The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations. |\n| maxInterval                     | 0.0667  | Maximum simulated time (in milliseconds) that may be taken by the physics engine per frame. Effectively prevents weird \"jumps\" when the player returns to the scene after a few minutes, at the expense of pausing physics during this time. |\n| friction                        | 0.01    | Coefficient of friction.                           |\n| restitution                     | 0.3     | Coefficient of restitution (bounciness).           |\n| contactEquationStiffness        | 1e8     | Stiffness of the produced contact equations.       |\n| contactEquationRelaxation       | 3       | Relaxation time of the produced contact equations. |\n| frictionEquationStiffness       | 1e8     | Stiffness of the produced friction equations.      |\n| frictionEquationRegularization  | 3       | Relaxation time of the produced friction equations |\n\nMore advanced configuration, including specifying different collision behaviors for different objects, is available through the CANNON.js JavaScript API.\n\nResources:\n\n* [CANNON.World](http://schteppe.github.io/cannon.js/docs/classes/World.html)\n* [CANNON.ContactMaterial](http://schteppe.github.io/cannon.js/docs/classes/ContactMaterial.html)\n\n","url":"https://unpkg.com/aframe-physics-system@^1.0.x/README.md"},"https://unpkg.com/aframe-stats-in-vr-component@0.1.x/README.md":{"text":"## aframe-stats-in-vr-component\r\n\r\nstats-in-vr component for [A-Frame](https://aframe.io).\r\n\r\n![Screenshot](https://chenzlabs.github.io/stats-in-vr/pc-screenshot.png)\r\nThe stats-in-vr component allows the A-Frame scene stats component to be visible in VR.\r\n\r\n## Example\r\n\r\n```html\r\n<a-scene stats-in-vr></a-scene>\r\n```\r\n\r\n## Value\r\n\r\n| Property             | Description                                        | Default Value        |\r\n|----------------------|----------------------------------------------------|----------------------|\r\n| enabled              | Whether enabled or not.                            | true                 |\r\n| position             | Position of camera-locked stats panel.             | '0 -0.35 -0.5'       |\r\n| scale                | Scale of camera-locked stats panel.                | '0.5 0.5 1'          |\r\n\r\n## Events\r\n\r\n| Event Name   | Description             |\r\n| ----------   | -----------             |\r\n\r\n### Installation\r\n\r\n#### Browser\r\n\r\nInstall and use by directly including the [browser files](dist):\r\n\r\n```html\r\n<head>\r\n  <title>My A-Frame Scene</title>\r\n  <script src=\"https://aframe.io/releases/0.4.0/aframe.min.js\"></script>\r\n  <script src=\"https://rawgit.com/chenzlabs/stats-in-vr/master/dist/aframe-stats-in-vr-component.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n  <a-scene stats-in-vr></a-scene>\r\n</body>\r\n```\r\n\r\n#### npm\r\n\r\nInstall via npm:\r\n\r\n```bash\r\nnpm install aframe-stats-in-vr-component\r\n```\r\n\r\nThen register and use.\r\n\r\n```js\r\nrequire('aframe');\r\nrequire('aframe-stats-in-vr-component');\r\n```\r\n","url":"https://unpkg.com/aframe-stats-in-vr-component@0.1.x/README.md"}}